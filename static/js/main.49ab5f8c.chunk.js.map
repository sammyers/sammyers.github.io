{"version":3,"sources":["state/game/types.ts","components/AnchorLink.tsx","state/players/utils.ts","state/players/selectors.ts","state/game/partialSelectors.ts","state/game/utils.ts","utils/labels.ts","state/prompts/prompts.ts","state/game/selectors.ts","utils/hooks.ts","components/ScoreBug.tsx","state/game/slice.ts","utils/common.ts","components/SettingsMenu.tsx","components/BasesPreview.tsx","components/TopBar.tsx","components/prompts/PromptAccordion.tsx","state/prompts/selectors.ts","components/prompts/PlateAppearancePreview.tsx","components/prompts/OptionSelector.tsx","state/prompts/slice.ts","components/prompts/subprompts/ContactPrompt.tsx","components/prompts/subprompts/FielderPrompt.tsx","components/prompts/panels/ContactPanel.tsx","components/prompts/subprompts/RunnerPrompt.tsx","components/prompts/HitPrompt.tsx","components/prompts/OutPrompt.tsx","components/prompts/SacrificeFlyPrompt.tsx","components/prompts/subprompts/OutOnPlayPrompt.tsx","components/prompts/FieldersChoicePrompt.tsx","components/prompts/DoublePlayPrompt.tsx","components/prompts/EventDetailPrompt.tsx","components/EventReporter.tsx","icons/base.svg","icons/home.svg","components/plays/Play.tsx","state/plays/plays.ts","state/plays/selectors.ts","components/PlayNotification.tsx","components/Bases.tsx","components/LineupPlayer.tsx","state/players/slice.ts","components/Lineup.tsx","components/Teams.tsx","state/stats/stats.ts","state/stats/selectors.ts","components/BoxScore.tsx","components/plays/HalfInningPlays.tsx","components/plays/Plays.tsx","theme.ts","state/players/testData.ts","components/GameOver.tsx","components/App.tsx","state/store.ts","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["HalfInning","TeamRole","BaseType","FieldingPosition","PlateAppearanceType","ContactType","GameStatus","AnchorLink","props","match","useRouteMatch","path","to","Anchor","color","as","colorProp","hasIcon","hasLabel","rest","formatShortName","firstName","lastName","getPlayer","state","playerId","players","getShortPlayerName","player","getAllPlayers","getAllPlayersList","createSelector","Object","values","getPlayerGetter","getBattingTeam","halfInning","half","BOTTOM","HOME","AWAY","getBattingLineup","teams","battingTeam","lineup","getOnDeckBatter","atBat","batterId","lineupIndex","_","findIndex","id","length","allPositions","keys","shouldTeamUseFourOutfielders","getAvailablePositionsForTeam","team","filter","position","CENTER_FIELD","RIGHT_CENTER","LEFT_CENTER","includes","getBaseForRunner","runners","runnerId","findKey","runner","moveRunner","startBase","endBase","removeRunner","getNewBase","currentBase","numAdvanced","getPreviousBase","THIRD","SECOND","getNumBasesForPlateAppearance","paType","HOMERUN","TRIPLE","DOUBLE","SINGLE","WALK","getEndBaseForBatterRunner","FIELDERS_CHOICE","FIRST","getBaseNumber","base","mustRunnerAdvance","batterEndBase","prevBase","getSortedRunners","toPairs","sort","baseA","baseB","getLeadRunner","last","forEachRunner","callback","sortedPairs","forEachRight","getDefaultRunnersAfterPlateAppearance","runnersScored","newRunners","numBasesAdvanced","times","i","push","moveRunnersOnGroundBall","updateScore","runs","score","applyGameEvent","event","inning","outs","recordedPlay","gameState","runnersBattedIn","runnersAfter","scoreAfter","recordRunnersScored","battedIn","kind","getRunners","getCurrentBaseForRunner","success","type","size","newBaseRunners","SACRIFICE_FLY","runsScoredOnSacFly","runnersOutOnPlay","DOUBLE_PLAY","forEach","contactType","GROUNDER","OUT","outsOnBasepaths","basesTaken","gameHistory","formatShortBaseName","getPositionAbbreviation","PITCHER","CATCHER","FIRST_BASE","SECOND_BASE","THIRD_BASE","SHORTSTOP","LEFT_FIELD","RIGHT_FIELD","getPlateAppearanceLabel","getOutLabelFromContact","LAZY_FLY","LINE_DRIVE","LONG_FLY","POPUP","NONE","getHitLabelFromContact","getRunnerOptionLabel","option","attemptedAdvance","successfulAdvance","baseName","getOrdinalInning","suffix","inPlayContactOptions","ct","getContactOptionsForHit","contactTypes","map","label","getContactOptionsForOut","infieldPositions","getOutfieldPositions","fourOutfielders","getAllPositions","makeFielderOptions","positions","getFielderOptionsForContactType","hit","getRunnerOptions","expectedBases","allowScoring","leadRunner","getRunnerOptionsRecursive","runnerAhead","nextRunner","leadBase","trailingRunner","getTrailingRunner","options","bases","advancedOptions","flatten","getBasepathOutcomesForBases","possibleBases","inRange","getAvailableBases","defaultOption","nextBase","getTrailingRunnerOptions","outcome","currentOuts","getTeams","game","present","getNumOuts","getScore","getHalfInning","getInning","getCurrentBatter","doesFieldingTeamHaveFourOutfielders","getRunnerNames","mapValues","getBatterName","getPlayerAtPositionFromTeams","p","getPlayerPosition","find","getLineups","getPlayersNotInGame","allPlayers","lineups","allPlayersInGame","canStartGame","numAwayPlayers","numHomePlayers","Math","abs","getGameStatus","status","isGameInProgress","IN_PROGRESS","isGameOver","FINISHED","getPlateAppearanceOptions","notPossible","Set","add","has","getNextBatter","getInTheHoleBatter","getOnDeckBatterName","getInTheHoleBatterName","createPlateAppearancePromptSelector","contactOptions","getNextOptions","required","fielderOptions","runnerOptions","runnersScoredOptions","range","numScored","outOnPlayOptions","runnerIds","runnerOut","undefined","reverse","multiple","runnersOut","defaultRunnerPositions","runnersToBases","invert","getPlateAppearanceDetailPrompt","getGameHistory","getCurrentGameLength","gameLength","getMinGameLength","awayScore","homeScore","max","getMaxGameLength","isGameInExtraInnings","getFuture","future","isUndoPossible","past","isRedoPossible","useAppDispatch","useDispatch","useAppSelector","useSelector","boldStyle","fontWeight","ScoreBug","numOuts","Box","direction","gap","align","Text","TOP","CaretUpFill","CaretDownFill","Table","TableBody","TableRow","style","TableCell","scope","initialTeamState","name","initialState","NOT_STARTED","getNextAvailablePosition","takenPositions","updatePositions","some","cleanUpAfterPlateAppearance","nextBatter","upNextHalfInning","createSlice","reducers","addPlayerToGame","payload","movePlayer","fromTeam","toTeam","list","startIndex","endIndex","result","Array","from","splice","removed","reorderItemInList","sourceTeam","destTeam","sourceList","destList","sourceClone","destClone","moveItemBetweenLists","newSourceLineup","newDestLineup","removePlayerFromGame","changePlayerPosition","currentPlayerWithPosition","startGame","recordGameEvent","homeLeadingAfterTop","awayLeadingAfterBottom","changeGameLength","incrementGameLength","decrementGameLength","extendGame","resetGame","fullResetGame","gameActions","actions","reducer","undoable","includeAction","limit","syncFilter","ResetConfirm","dispatch","onConfirm","useCallback","pad","width","textAlign","Button","onClick","SettingsMenu","minInnings","maxInnings","currentGameLength","inProgress","inExtraInnings","useState","resetConfirmOpen","setResetConfirmOpen","handleChangeGameLength","target","parseInt","value","handleClickSubtractGameLength","handleClickAddGameLength","vertical","horizontal","Heading","level","margin","alignSelf","icon","Subtract","disabled","RangeInput","step","min","onChange","Add","DropButton","PowerReset","open","onOpen","dropContent","dropProps","top","onClose","BasesPreview","first","second","third","Blank","version","xmlns","xmlnsXlink","preserveAspectRatio","viewBox","height","d","xlinkHref","opacity","fill","fillOpacity","clipPath","stroke","strokeWidth","strokeOpacity","TopBar","history","useHistory","gameInProgress","gameCanStart","settingsButtonRef","useRef","showSettings","setShowSettings","toggleSettings","show","Header","background","Nav","right","plain","left","SettingsOption","ref","current","Drop","promptAccordionContext","createContext","PromptAccordionPanel","preview","children","active","useContext","AccordionPanel","header","justify","round","weight","Edit","PromptAccordion","numPanels","Children","count","activeIndices","setActiveIndices","handleActiveIndicesChange","indices","currentIndices","sortBy","slice","Accordion","activeIndex","onActive","child","Provider","getSelectedContactOption","prompts","contactChoice","getSelectedFielderOption","fielderChoice","getSelectedOutOnPlayOptions","outOnPlayChoices","getSelectedSacFlyRunsScored","sacFlyRunsScoredChoice","getPlateAppearanceResult","fieldedBy","allRunnerChoices","getExtraRunnerMovementForPlateAppearance","runnerChoices","getAllRunnerChoices","PlateAppearancePreview","promptContext","createNextState","getPresent","getPlateAppearancePreview","border","OptionSelector","isSelected","val","handleClickOption","clickedVal","isArray","concat","overflow","index","negative","isObject","selected","flex","hoverIndicator","side","setRunnerChoice","clearRunnerChoice","setContactChoice","clearContactChoice","setFielderChoice","clearFielderChoice","setOutOnPlayChoices","clearOutOnPlayChoices","setSacFlyRunsScoredChoice","resetSacFlyRunsScoredChoice","clearPrompt","promptActions","ContactPrompt","useEffect","selectedOption","formattedOptions","useMemo","handleChange","FielderPrompt","showTitle","bottom","ContactPanel","RunnerPrompt","getSelectedRunnerOption","runnerName","trailingRunnerOptions","whiteSpace","HitPrompt","setCanSubmit","selectedContactType","OutPrompt","SacrificeFlyPrompt","selectedRunsScored","handleChangeRunsScored","shouldShowOOPPrompt","OutOnPlayPrompt","dontShow","selector","selectedOptions","handleChangeSingle","handleChangeMultiple","playerIds","getPlayerOptionsForSelector","FieldersChoicePrompt","selectedOutOnPlay","canSubmit","DoublePlayPrompt","selectedOutsOnPlay","nextOptions","outsOnPlayFulfilled","EventDetailPrompt","promptView","onSubmit","onCancel","promptSelector","prompt","batter","Layer","responsive","buttonGroups","types","EventReporter","pendingPlateAppearance","setPendingPlateAppearance","handleSubmitPlateAppearance","getState","handleCancelPrompt","gridArea","alignContent","wrap","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBase","_ref","svgRef","title","titleId","ForwardRef","SvgHome","PlayTypeTag","toUpperCase","ScoreTag","away","home","Play","description","getPositionTitle","getContactVerb","formatBaseName","makeOutPhrase","getPlayDescription","newNumOuts","newScore","sentences","finishSentence","parts","join","fielderToken","outBase","hitType","getHitVerb","toLowerCase","token","makeInterpolatedPlayDescription","play","playerGetter","interpolatedDescription","replace","RegExp","getAllPlays","reduce","groupedPlays","lastGroup","plays","getScoringPlays","groups","group","getLastPlay","lastPlay","PlayNotification","nextState","nextPlay","showNotification","setShowNotification","timeoutId","clearTimeout","window","setTimeout","modal","ThemeContext","Extend","global","medium","Card","Base","occupied","HomePlate","Bases","firstBaseRunner","secondBaseRunner","thirdBaseRunner","onDeck","inTheHole","undoPossible","redoPossible","undo","ActionCreators","redo","boxRef","Grid","rows","columns","areas","scoped","Undo","Redo","LineupPlayer","getPlayerName","availablePositions","getAvailablePositions","positionOptions","handleRemove","handleChangePosition","draggableId","innerRef","draggableProps","dragHandleProps","xsmall","Select","labelKey","valueKey","Close","initialStats","atBats","hits","doubles","triples","homeRuns","walks","stolenBases","caughtStealing","runsBattedIn","runsScored","strikeouts","sacrificeFlies","groundIntoDoublePlays","leftOnBase","addPlayer","newPlayer","games","stats","prepare","uuidv1","NEW_PLAYER_ID","Lineup","teamRole","getLineup","availablePlayers","searchValue","setSearchValue","suggestions","existingSuggestions","startsWith","handleSearchChange","currentTarget","handleSuggestionSelect","suggestion","inputStr","split","startCase","getNameParts","TextInput","placeholder","onSelect","lineupSpot","droppableId","droppableProps","Teams","handleDragEnd","destination","onDragEnd","shrink","basis","getBoxScore","allStats","updatePlayer","aggregateStats","playerStats","battingAverage","onBasePercentage","sluggingPercentage","onBasePlusSlugging","isolatedPower","getRateStats","isNaN","formatted","toFixed","formatDecimal","NameCell","fontStyle","TeamBoxScore","DataTable","property","primary","render","data","BoxScore","awayStats","homeStats","HalfInningPlays","CardHeader","CardBody","Plays","gameStarted","scoringPlays","allPlays","currentInning","selectedInning","setSelectedInning","allPlaysForInning","selectInning","xxsmall","theme","colors","brand","focus","outline","rangeInput","track","extend","borderRadius","accordion","GameOver","gameStatus","maxGameLength","onClickExtendGame","onClickResetGame","onClickFullResetGame","Main","App","effect","pathname","useLocation","gameOver","Grommet","full","persistCombineReducers","storage","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","loading","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.49ab5f8c.chunk.js","sourcesContent":["export enum HalfInning {\n  TOP,\n  BOTTOM,\n}\nexport enum TeamRole {\n  AWAY,\n  HOME,\n}\nexport enum BaseType {\n  FIRST = 'FIRST',\n  SECOND = 'SECOND',\n  THIRD = 'THIRD',\n}\nexport enum FieldingPosition {\n  PITCHER = 'PITCHER',\n  CATCHER = 'CATCHER',\n  FIRST_BASE = 'FIRST_BASE',\n  SECOND_BASE = 'SECOND_BASE',\n  THIRD_BASE = 'THIRD_BASE',\n  SHORTSTOP = 'SHORTSTOP',\n  LEFT_FIELD = 'LEFT_FIELD',\n  CENTER_FIELD = 'CENTER_FIELD',\n  LEFT_CENTER = 'LEFT_CENTER',\n  RIGHT_CENTER = 'RIGHT_CENTER',\n  RIGHT_FIELD = 'RIGHT_FIELD',\n}\nexport enum PlateAppearanceType {\n  OUT = 'OUT',\n  WALK = 'WALK',\n  SINGLE = 'SINGLE',\n  DOUBLE = 'DOUBLE',\n  TRIPLE = 'TRIPLE',\n  HOMERUN = 'HOMERUN',\n  SACRIFICE_FLY = 'SACRIFICE_FLY',\n  FIELDERS_CHOICE = 'FIELDERS_CHOICE',\n  DOUBLE_PLAY = 'DOUBLE_PLAY',\n}\nexport enum ContactType {\n  NONE = 'NONE',\n  GROUNDER = 'GROUNDER',\n  LINE_DRIVE = 'LINE_DRIVE',\n  POPUP = 'POPUP',\n  LAZY_FLY = 'LAZY_FLY',\n  LONG_FLY = 'LONG_FLY',\n}\nexport type HitType = Exclude<\n  PlateAppearanceType,\n  | PlateAppearanceType.DOUBLE_PLAY\n  | PlateAppearanceType.FIELDERS_CHOICE\n  | PlateAppearanceType.OUT\n  | PlateAppearanceType.SACRIFICE_FLY\n  | PlateAppearanceType.WALK\n>;\nexport type HitContactType = Exclude<ContactType, ContactType.NONE>;\n\nexport interface Team {\n  name: string;\n  lineup: string[];\n  positions: {\n    [playerId: string]: FieldingPosition;\n  };\n}\n\nexport type BaseRunners = Partial<Record<BaseType, string>>;\n\nexport interface PlateAppearanceResult {\n  kind: 'plateAppearance';\n  type: PlateAppearanceType;\n  contactType?: ContactType;\n  fieldedBy?: FieldingPosition;\n  runnersOutOnPlay: string[];\n  basesTaken: {\n    [runnerId: string]: BaseType | null;\n  };\n  outsOnBasepaths: {\n    [runnerId: string]: BaseType | null;\n  };\n  runsScoredOnSacFly?: number;\n}\n\nexport interface StolenBaseAttempt {\n  kind: 'stolenBaseAttempt';\n  runnerId: string;\n  success: boolean;\n}\n\nexport type GameEvent = PlateAppearanceResult | StolenBaseAttempt;\n\nexport enum GameStatus {\n  NOT_STARTED = 'NOT_STARTED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  FINISHED = 'FINISHED',\n}\n\nexport interface GameState {\n  status: GameStatus;\n  teams: [Team, Team];\n  inning: number;\n  halfInning: HalfInning;\n  atBat?: string;\n  upNextHalfInning?: string;\n  runners: BaseRunners;\n  outs: number;\n  gameHistory: RecordedPlay[];\n  score: [number, number];\n  gameLength: number;\n}\n\nexport interface RecordedPlay {\n  gameState: Required<\n    Pick<GameState, 'atBat' | 'inning' | 'halfInning' | 'runners' | 'outs' | 'score'>\n  >;\n  event: GameEvent;\n  runnersScored: string[];\n  runnersBattedIn: string[];\n  runnersAfter: BaseRunners;\n  scoreAfter: [number, number];\n}\n\nexport interface AddPlayerPayload {\n  playerId: string;\n  team: TeamRole;\n}\n\nexport interface MovePlayerPayload {\n  startIndex: number;\n  endIndex: number;\n  fromTeam: TeamRole;\n  toTeam: TeamRole;\n}\nexport interface ChangePlayerPositionPayload {\n  playerId: string;\n  position: FieldingPosition;\n}\n","import React from 'react';\nimport { Anchor, AnchorProps } from 'grommet';\nimport { Link, LinkProps, useRouteMatch } from 'react-router-dom';\n\nexport type AnchorLinkProps = LinkProps & AnchorProps & Omit<JSX.IntrinsicElements['a'], 'color'>;\n\nconst AnchorLink: React.FC<AnchorLinkProps> = props => {\n  const match = useRouteMatch({ path: props.to as string });\n  return (\n    <Anchor\n      color={!!match ? 'accent-4' : 'accent-3'}\n      as={({ colorProp, hasIcon, hasLabel, ...rest }) => <Link {...rest} />}\n      {...props}\n    />\n  );\n};\nexport default AnchorLink;\n","import _ from 'lodash';\n\nimport { Player } from './types';\n\nexport const formatShortName = ({ firstName, lastName }: Player) => `${firstName} ${lastName[0]}`;\n\nexport const getNameParts = (inputStr: string) => {\n  const [firstName, ...lastName] = inputStr.split(' ');\n  return { firstName: _.startCase(firstName), lastName: _.startCase(lastName.join(' ')) };\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { formatShortName } from './utils';\n\nimport { AppState } from 'state/store';\nimport { Player } from './types';\n\nconst getPlayer = (state: AppState, playerId: string): Player | undefined =>\n  state.players[playerId];\n\nexport const getPlayerName = (state: AppState, playerId: string) => {\n  const player = getPlayer(state, playerId);\n  return player ? `${player.firstName} ${player.lastName}` : '';\n};\n\nexport const getShortPlayerName = (state: AppState, playerId: string) => {\n  const player = getPlayer(state, playerId);\n  return player ? formatShortName(player) : '';\n};\n\nexport const getAllPlayers = (state: AppState) => state.players;\nexport const getAllPlayersList = createSelector(getAllPlayers, players => Object.values(players));\n\nexport const getPlayerOptionsForSelector = (state: AppState, playerIds: string[]) =>\n  playerIds.map(id => ({ label: getShortPlayerName(state, id), value: id }));\n\nexport const getPlayerGetter = createSelector(getAllPlayers, players => (playerId: string) =>\n  players[playerId]\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nimport { GameState, HalfInning, TeamRole } from './types';\nimport { getBaseForRunner } from './utils';\n\nexport const getTeams = (state: GameState) => state.teams;\nexport const getRunners = (state: GameState) => state.runners;\nexport const getCurrentBatter = (state: GameState) => state.atBat;\n\nexport const getCurrentBaseForRunner = (state: GameState, playerId: string) =>\n  getBaseForRunner(getRunners(state), playerId);\n\nexport const getHalfInning = (state: GameState) => state.halfInning;\n\nexport const getBattingTeam = createSelector(getHalfInning, half =>\n  half === HalfInning.BOTTOM ? TeamRole.HOME : TeamRole.AWAY\n);\nexport const getBattingLineup = createSelector(\n  getTeams,\n  getBattingTeam,\n  (teams, battingTeam) => teams[battingTeam].lineup\n);\n\nexport const getOnDeckBatter = createSelector(\n  getCurrentBatter,\n  getBattingLineup,\n  (batterId, lineup) => {\n    const lineupIndex = _.findIndex(lineup, id => id === batterId);\n    if (lineupIndex === lineup.length - 1) {\n      return lineup[0];\n    }\n    return lineup[lineupIndex + 1];\n  }\n);\n","import _ from 'lodash';\n\nimport { getBattingTeam, getCurrentBaseForRunner } from './partialSelectors';\n\nimport {\n  BaseType,\n  PlateAppearanceType,\n  BaseRunners,\n  FieldingPosition,\n  Team,\n  GameEvent,\n  GameState,\n  RecordedPlay,\n  ContactType,\n} from './types';\n\nexport const allPositions = _.keys(FieldingPosition) as FieldingPosition[];\n\nexport const shouldTeamUseFourOutfielders = ({ lineup }: Team) => lineup.length > 9;\nexport const getAvailablePositionsForTeam = (team: Team) => {\n  if (shouldTeamUseFourOutfielders(team)) {\n    return allPositions.filter(position => position !== FieldingPosition.CENTER_FIELD);\n  }\n  return allPositions.filter(\n    position => ![FieldingPosition.RIGHT_CENTER, FieldingPosition.LEFT_CENTER].includes(position)\n  );\n};\n\nexport const getBaseForRunner = (runners: BaseRunners, runnerId: string) =>\n  _.findKey(runners, runner => runner === runnerId) as BaseType;\n\nexport const moveRunner = (runners: BaseRunners, startBase: BaseType, endBase: BaseType | null) => {\n  if (endBase) {\n    runners[endBase] = runners[startBase];\n    delete runners[startBase];\n    return false;\n  } else {\n    delete runners[startBase];\n    return true;\n  }\n};\n\nexport const removeRunner = (runners: BaseRunners, runnerId: string) => {\n  delete runners[getBaseForRunner(runners, runnerId)];\n};\n\n// Find the base a runner should occupy if advanced by some number of bases.\n// Return null if the runner has scored.\nexport const getNewBase = (currentBase: BaseType, numAdvanced: number = 1) => {\n  if (numAdvanced === -1) return getPreviousBase(currentBase)!;\n  if (numAdvanced === 0) return currentBase;\n  if (currentBase === BaseType.THIRD) return null;\n  if (currentBase === BaseType.SECOND) {\n    if (numAdvanced > 1) return null;\n    return BaseType.THIRD;\n  }\n  if (numAdvanced > 2) return null;\n  if (numAdvanced === 2) return BaseType.THIRD;\n  return BaseType.SECOND;\n};\n\nexport const getNumBasesForPlateAppearance = (paType: PlateAppearanceType) => {\n  switch (paType) {\n    case PlateAppearanceType.HOMERUN:\n      return 4;\n    case PlateAppearanceType.TRIPLE:\n      return 3;\n    case PlateAppearanceType.DOUBLE:\n      return 2;\n    case PlateAppearanceType.SINGLE:\n    case PlateAppearanceType.WALK:\n      return 1;\n    default:\n      return 0;\n  }\n};\n\nexport const getEndBaseForBatterRunner = (paType: PlateAppearanceType) => {\n  switch (paType) {\n    case PlateAppearanceType.TRIPLE:\n      return BaseType.THIRD;\n    case PlateAppearanceType.DOUBLE:\n      return BaseType.SECOND;\n    case PlateAppearanceType.SINGLE:\n    case PlateAppearanceType.WALK:\n    case PlateAppearanceType.FIELDERS_CHOICE:\n      return BaseType.FIRST;\n    default:\n      return null;\n  }\n};\n\nexport const getBaseNumber = (base: BaseType | null) =>\n  base === null\n    ? 4\n    : {\n        [BaseType.FIRST]: 1,\n        [BaseType.SECOND]: 2,\n        [BaseType.THIRD]: 3,\n      }[base];\nexport const getPreviousBase = (base: BaseType | null) => {\n  switch (base) {\n    case null:\n      return BaseType.THIRD;\n    case BaseType.THIRD:\n      return BaseType.SECOND;\n    case BaseType.SECOND:\n      return BaseType.FIRST;\n    case BaseType.FIRST:\n      return;\n  }\n};\n\nexport const mustRunnerAdvance = (\n  base: BaseType,\n  runners: BaseRunners,\n  batterEndBase = BaseType.FIRST\n): boolean => {\n  const prevBase = getPreviousBase(base);\n\n  if (getBaseNumber(base) - getBaseNumber(batterEndBase) <= 0) return true;\n  if (!prevBase) return true;\n  if (!runners[prevBase]) return false;\n\n  return mustRunnerAdvance(prevBase, runners, batterEndBase);\n};\n\nexport const getSortedRunners = (runners: BaseRunners) =>\n  (_.toPairs(runners) as [BaseType, string][]).sort(\n    ([baseA], [baseB]) => getBaseNumber(baseA) - getBaseNumber(baseB)\n  );\n\nexport const getLeadRunner = (runners: BaseRunners) => _.last(getSortedRunners(runners));\n\nexport const forEachRunner = (\n  runners: BaseRunners,\n  callback: (runnerId: string, base: BaseType) => void | boolean\n) => {\n  const sortedPairs = getSortedRunners(runners);\n  _.forEachRight(sortedPairs, ([base, runnerId]) => callback(runnerId, base));\n};\n\nexport const getDefaultRunnersAfterPlateAppearance = (\n  runners: BaseRunners,\n  paType: PlateAppearanceType,\n  batterId: string\n): [BaseRunners, string[]] => {\n  let runnersScored: string[] = [];\n  const newRunners = { ...runners };\n  const numBasesAdvanced = getNumBasesForPlateAppearance(paType);\n\n  _.times(numBasesAdvanced, i => {\n    forEachRunner(newRunners, (runnerId, base) => {\n      if (mustRunnerAdvance(base, newRunners, getEndBaseForBatterRunner(paType)!)) {\n        if (moveRunner(newRunners, base, getNewBase(base))) {\n          runnersScored.push(runnerId);\n        }\n      }\n    });\n    if (i === 0 && getEndBaseForBatterRunner(paType)) {\n      newRunners[BaseType.FIRST] = batterId;\n    }\n  });\n\n  return [newRunners, runnersScored];\n};\n\nexport const moveRunnersOnGroundBall = (runners: BaseRunners) => {\n  let runnersScored: string[] = [];\n  forEachRunner(runners, (runnerId, base) => {\n    if (mustRunnerAdvance(base, runners)) {\n      if (moveRunner(runners, base, getNewBase(base))) {\n        runnersScored.push(runnerId);\n      }\n    }\n  });\n  return runnersScored;\n};\n\nexport const mustAllRunnersAdvance = (runners: BaseRunners) =>\n  _.every(runners, (_runnerId, base) => mustRunnerAdvance(base as BaseType, runners));\n\nconst updateScore = (state: GameState, runs: number = 1) => {\n  state.score[getBattingTeam(state)] += runs;\n};\n\nexport const applyGameEvent = (state: GameState, event: GameEvent) => {\n  const { atBat, inning, halfInning, outs, runners, score } = state;\n  const recordedPlay: RecordedPlay = {\n    event: event,\n    gameState: {\n      atBat: atBat!,\n      inning,\n      halfInning,\n      outs,\n      runners: { ...runners },\n      score: [...score],\n    },\n    runnersBattedIn: [],\n    runnersScored: [],\n    runnersAfter: runners,\n    scoreAfter: score,\n  };\n\n  const recordRunnersScored = (runners: string[], battedIn = true) => {\n    if (battedIn) {\n      recordedPlay.runnersBattedIn.push(...runners);\n    }\n    recordedPlay.runnersScored.push(...runners);\n  };\n\n  if (event.kind === 'stolenBaseAttempt') {\n    const startBase = getCurrentBaseForRunner(state, event.runnerId);\n    if (event.success) {\n      const endBase = getNewBase(startBase);\n      delete state.runners[startBase];\n      if (endBase) {\n        state.runners[endBase] = event.runnerId;\n      } else {\n        // runner scored\n        updateScore(state);\n        recordRunnersScored([event.runnerId], false);\n      }\n    } else {\n      delete state.runners[startBase];\n      state.outs++;\n    }\n  } else if (event.kind === 'plateAppearance') {\n    switch (event.type) {\n      case PlateAppearanceType.HOMERUN:\n        updateScore(state, _.size(state.runners) + 1);\n        recordRunnersScored([...(_.values(state.runners) as string[]), atBat!]);\n        state.runners = {};\n        break;\n      case PlateAppearanceType.TRIPLE:\n        updateScore(state, _.size(state.runners));\n        recordRunnersScored(_.values(state.runners) as string[]);\n        state.runners = { [BaseType.THIRD]: atBat };\n        break;\n      case PlateAppearanceType.DOUBLE:\n      case PlateAppearanceType.SINGLE:\n      case PlateAppearanceType.WALK:\n        const [newBaseRunners, runnersScored] = getDefaultRunnersAfterPlateAppearance(\n          state.runners,\n          event.type,\n          atBat!\n        );\n        state.runners = newBaseRunners;\n        updateScore(state, runnersScored.length);\n        recordRunnersScored(runnersScored);\n        break;\n      case PlateAppearanceType.SACRIFICE_FLY:\n        _.times(event.runsScoredOnSacFly!, () => {\n          const [base, runnerId] = getLeadRunner(runners)!;\n          moveRunner(runners, base, null);\n          updateScore(state);\n          recordRunnersScored([runnerId]);\n        });\n        state.outs++;\n        break;\n      case PlateAppearanceType.FIELDERS_CHOICE: {\n        removeRunner(state.runners, event.runnersOutOnPlay[0]);\n        const runnersScored = moveRunnersOnGroundBall(state.runners);\n        state.runners[BaseType.FIRST] = atBat;\n        if (runnersScored.length && outs < 2) {\n          updateScore(state);\n          recordRunnersScored(runnersScored);\n        }\n        state.outs++;\n        break;\n      }\n      case PlateAppearanceType.DOUBLE_PLAY:\n        state.outs += 2;\n        event.runnersOutOnPlay.forEach(runnerId => {\n          removeRunner(state.runners, runnerId);\n        });\n        if (event.contactType === ContactType.GROUNDER) {\n          const runnersScored = moveRunnersOnGroundBall(state.runners);\n          if (runnersScored.length && outs === 0) {\n            updateScore(state, runnersScored.length);\n            recordRunnersScored(runnersScored, false);\n          }\n\n          if (!event.runnersOutOnPlay.includes(atBat!)) {\n            state.runners[BaseType.FIRST] = atBat;\n          }\n        }\n        break;\n      case PlateAppearanceType.OUT:\n        if (event.contactType === ContactType.GROUNDER) {\n          const runnersScored = moveRunnersOnGroundBall(state.runners);\n          if (runnersScored.length && outs < 2) {\n            updateScore(state, runnersScored.length);\n            recordRunnersScored(runnersScored);\n          }\n        }\n        state.outs++;\n        break;\n    }\n\n    forEachRunner(state.runners, (runnerId, base) => {\n      if (runnerId in event.outsOnBasepaths) {\n        delete state.runners[base];\n        state.outs++;\n      } else if (runnerId in event.basesTaken) {\n        if (moveRunner(state.runners, base, event.basesTaken[runnerId])) {\n          updateScore(state);\n          recordRunnersScored([runnerId], event.type !== PlateAppearanceType.DOUBLE_PLAY);\n        }\n      }\n    });\n\n    recordedPlay.runnersAfter = state.runners;\n    recordedPlay.scoreAfter = state.score;\n    state.gameHistory.push(recordedPlay);\n  }\n};\n","import {\n  PlateAppearanceType,\n  FieldingPosition,\n  ContactType,\n  HitContactType,\n  BaseType,\n} from 'state/game/types';\nimport { BasepathOutcome } from 'state/prompts/types';\n\nexport const formatShortBaseName = (base: BaseType | null) => {\n  if (base === null) return 'home';\n  return {\n    [BaseType.FIRST]: '1st',\n    [BaseType.SECOND]: '2nd',\n    [BaseType.THIRD]: '3rd',\n  }[base];\n};\n\nexport const getPositionAbbreviation = (position: FieldingPosition) =>\n  ({\n    [FieldingPosition.PITCHER]: 'P',\n    [FieldingPosition.CATCHER]: 'C',\n    [FieldingPosition.FIRST_BASE]: '1B',\n    [FieldingPosition.SECOND_BASE]: '2B',\n    [FieldingPosition.THIRD_BASE]: '3B',\n    [FieldingPosition.SHORTSTOP]: 'SS',\n    [FieldingPosition.LEFT_FIELD]: 'LF',\n    [FieldingPosition.CENTER_FIELD]: 'CF',\n    [FieldingPosition.LEFT_CENTER]: 'LCF',\n    [FieldingPosition.RIGHT_CENTER]: 'RCF',\n    [FieldingPosition.RIGHT_FIELD]: 'RF',\n  }[position]);\n\nexport const getPlateAppearanceLabel = (paType: PlateAppearanceType) =>\n  ({\n    [PlateAppearanceType.OUT]: 'Out',\n    [PlateAppearanceType.SINGLE]: 'Single',\n    [PlateAppearanceType.DOUBLE]: 'Double',\n    [PlateAppearanceType.TRIPLE]: 'Triple',\n    [PlateAppearanceType.HOMERUN]: 'Home Run',\n    [PlateAppearanceType.WALK]: 'Walk',\n    [PlateAppearanceType.SACRIFICE_FLY]: 'Sacrifice Fly',\n    [PlateAppearanceType.FIELDERS_CHOICE]: \"Fielder's Choice\",\n    [PlateAppearanceType.DOUBLE_PLAY]: 'Double Play',\n  }[paType]);\n\nexport const getOutLabelFromContact = (contactType: ContactType) =>\n  ({\n    [ContactType.GROUNDER]: 'Groundout',\n    [ContactType.LAZY_FLY]: 'Lazy flyout',\n    [ContactType.LINE_DRIVE]: 'Lineout',\n    [ContactType.LONG_FLY]: 'Long flyout',\n    [ContactType.POPUP]: 'Popout',\n    [ContactType.NONE]: 'Strikeout',\n  }[contactType]);\n\nexport const getHitLabelFromContact = (contactType: HitContactType) =>\n  ({\n    [ContactType.GROUNDER]: 'Ground ball',\n    [ContactType.LAZY_FLY]: 'Lazy fly ball',\n    [ContactType.LINE_DRIVE]: 'Line drive',\n    [ContactType.LONG_FLY]: 'Long fly ball',\n    [ContactType.POPUP]: 'Pop fly',\n  }[contactType]);\n\nexport const getRunnerOptionLabel = (option: BasepathOutcome) => {\n  if (!option.attemptedAdvance) {\n    return `Held at ${formatShortBaseName(option.endBase)}`;\n  }\n  if (option.endBase === null) {\n    if (option.successfulAdvance) {\n      return 'Scored';\n    }\n    return 'Out at home';\n  }\n  const baseName = formatShortBaseName(option.endBase);\n  if (option.successfulAdvance) {\n    return `Took ${baseName}`;\n  }\n  return `Out at ${baseName}`;\n};\n\nexport const getOrdinalInning = (inning: number) => {\n  let suffix;\n  switch (inning) {\n    case 1:\n      suffix = 'st';\n      break;\n    case 2:\n      suffix = 'nd';\n      break;\n    case 3:\n      suffix = 'rd';\n      break;\n    default:\n      suffix = 'th';\n      break;\n  }\n  return `${inning}${suffix}`;\n};\n","import _ from 'lodash';\n\nimport {\n  ContactType,\n  HitContactType,\n  FieldingPosition,\n  PlateAppearanceType,\n  BaseRunners,\n  BaseType,\n} from 'state/game/types';\nimport {\n  getDefaultRunnersAfterPlateAppearance,\n  getSortedRunners,\n  getBaseNumber,\n  forEachRunner,\n  moveRunner,\n  moveRunnersOnGroundBall,\n  removeRunner,\n  getPreviousBase,\n  getNewBase,\n  getNumBasesForPlateAppearance,\n  getLeadRunner,\n} from 'state/game/utils';\nimport {\n  getHitLabelFromContact,\n  getOutLabelFromContact,\n  getPositionAbbreviation,\n} from 'utils/labels';\n\nimport { PlateAppearanceDetailOptions, RunnerOptions, BasepathOutcome } from './types';\n\nconst getTrailingRunner = (runners: BaseRunners, leadBase: BaseType | null) => {\n  if (leadBase === null) {\n    return getLeadRunner(runners);\n  }\n\n  let trailingRunner: [BaseType, string] | undefined;\n  forEachRunner(runners, (runnerId, base) => {\n    if (getBaseNumber(base) < getBaseNumber(leadBase)) {\n      trailingRunner = [base, runnerId];\n      return false;\n    }\n  });\n\n  return trailingRunner;\n};\n\nexport const getAvailableBases = (currentBase: BaseType, nextRunner: BaseType | null) => {\n  const possibleBases = [..._.values(BaseType), null];\n  if (nextRunner === null) {\n    return possibleBases.filter(base => getBaseNumber(base) > getBaseNumber(currentBase));\n  }\n  return possibleBases.filter(base =>\n    _.inRange(getBaseNumber(base), getBaseNumber(currentBase) + 1, getBaseNumber(nextRunner))\n  );\n};\n\nconst inPlayContactOptions = _.values(ContactType).filter(\n  ct => ct !== ContactType.NONE\n) as HitContactType[];\nconst getContactOptionsForHit = (contactTypes: HitContactType[] = inPlayContactOptions) =>\n  contactTypes.map((contactType, id) => ({\n    id,\n    contactType,\n    label: getHitLabelFromContact(contactType),\n  }));\nconst getContactOptionsForOut = (contactTypes: ContactType[] = _.values(ContactType)) =>\n  contactTypes.map((contactType, id) => ({\n    id,\n    contactType,\n    label: getOutLabelFromContact(contactType),\n  }));\n\nconst infieldPositions = [\n  FieldingPosition.PITCHER,\n  FieldingPosition.CATCHER,\n  FieldingPosition.FIRST_BASE,\n  FieldingPosition.SECOND_BASE,\n  FieldingPosition.THIRD_BASE,\n  FieldingPosition.SHORTSTOP,\n];\nconst getOutfieldPositions = (fourOutfielders: boolean) => [\n  FieldingPosition.LEFT_FIELD,\n  ...(fourOutfielders\n    ? [FieldingPosition.LEFT_CENTER, FieldingPosition.RIGHT_CENTER]\n    : [FieldingPosition.CENTER_FIELD]),\n  FieldingPosition.RIGHT_FIELD,\n];\nconst getAllPositions = (fourOutfielders: boolean) => [\n  ...infieldPositions,\n  ...getOutfieldPositions(fourOutfielders),\n];\nconst makeFielderOptions = (positions: FieldingPosition[]) =>\n  positions.map((position, id) => ({ id, position, label: getPositionAbbreviation(position) }));\n\nconst getFielderOptionsForContactType = (\n  contactType: ContactType,\n  hit: boolean,\n  fourOutfielders: boolean\n) => {\n  let positions: FieldingPosition[];\n  switch (contactType) {\n    case ContactType.GROUNDER:\n      positions = hit ? getAllPositions(fourOutfielders) : infieldPositions;\n      break;\n    case ContactType.POPUP:\n      positions = infieldPositions;\n      break;\n    case ContactType.LAZY_FLY:\n    case ContactType.LONG_FLY:\n      positions = getOutfieldPositions(fourOutfielders);\n      break;\n    case ContactType.LINE_DRIVE:\n      positions = getAllPositions(fourOutfielders).filter(\n        position => position !== FieldingPosition.CATCHER\n      );\n      break;\n    case ContactType.NONE:\n      positions = [];\n      break;\n  }\n  return makeFielderOptions(positions);\n};\n\nconst getBasepathOutcomesForBases = (bases: (BaseType | null)[]): BasepathOutcome[] => {\n  if (!bases.length) return [];\n\n  const advancedOptions = _.flatten(\n    _.map(bases, endBase =>\n      [true, false].map(successfulAdvance => ({\n        attemptedAdvance: true as true,\n        successfulAdvance,\n        endBase,\n      }))\n    )\n  );\n\n  const options = [\n    { attemptedAdvance: false as false, endBase: getPreviousBase(advancedOptions[0].endBase)! },\n    ...advancedOptions,\n  ];\n\n  return options.map(({ ...option }, id) => ({ id, ...option }));\n};\n\nexport const getRunnerOptions = (\n  runners: BaseRunners,\n  outs: number,\n  expectedBases: Record<string, BaseType | null> = {},\n  allowScoring = true\n): RunnerOptions | undefined => {\n  const leadRunner = getLeadRunner(runners);\n  if (!leadRunner) return;\n  const [currentBase] = leadRunner;\n\n  return getRunnerOptionsRecursive(runners, outs, currentBase, null, expectedBases, allowScoring);\n};\nconst getRunnerOptionsRecursive = (\n  runners: BaseRunners,\n  outs: number,\n  currentBase: BaseType,\n  runnerAhead: BaseType | null,\n  expectedBases: Record<string, BaseType | null>,\n  allowScoring: boolean\n): RunnerOptions | undefined => {\n  const runnerId = runners[currentBase]!;\n  const nextRunner = getTrailingRunner(runners, currentBase);\n  const options = getBasepathOutcomesForBases(getAvailableBases(currentBase, runnerAhead)).filter(\n    option => option.endBase || allowScoring\n  );\n  const defaultOption =\n    runnerId in expectedBases\n      ? _.findIndex(options, ({ endBase }) => endBase === expectedBases[runnerId])\n      : 0;\n\n  if (options.length < 2) return;\n  if (!nextRunner) return { runnerId, options, defaultOption };\n\n  const [nextBase] = nextRunner;\n  const newRunners = { ...runners };\n\n  return {\n    runnerId,\n    options,\n    defaultOption,\n    getTrailingRunnerOptions: outcome => {\n      let currentOuts = outs;\n      let endBase: BaseType | null = currentBase;\n      if (outcome.attemptedAdvance) {\n        endBase = outcome.endBase;\n        if (!outcome.successfulAdvance) {\n          delete newRunners[currentBase];\n          currentOuts++;\n          if (currentOuts === 3) return;\n          endBase = runnerAhead;\n        } else if (!endBase) {\n          delete newRunners[currentBase];\n        } else {\n          moveRunner(newRunners, currentBase, endBase);\n        }\n      }\n\n      return getRunnerOptionsRecursive(\n        newRunners,\n        currentOuts,\n        nextBase,\n        endBase,\n        expectedBases,\n        allowScoring\n      );\n    },\n  };\n};\n\nexport const getPlateAppearanceDetailPrompt = (\n  paType: PlateAppearanceType,\n  batterId: string,\n  outs: number,\n  runners: BaseRunners,\n  fourOutfielders: boolean\n): PlateAppearanceDetailOptions | void => {\n  switch (paType) {\n    case PlateAppearanceType.WALK:\n      return;\n\n    case PlateAppearanceType.HOMERUN:\n      return {\n        kind: 'hit',\n        contactOptions: {\n          options: getContactOptionsForHit([ContactType.LINE_DRIVE, ContactType.LONG_FLY]),\n        },\n        getNextOptions: () => ({\n          options: makeFielderOptions(getOutfieldPositions(fourOutfielders)),\n        }),\n      };\n\n    case PlateAppearanceType.OUT:\n      return {\n        kind: 'out',\n        contactOptions: {\n          required: true,\n          options: getContactOptionsForOut(),\n        },\n        getNextOptions: (contactType: ContactType) => {\n          const newRunners = { ...runners };\n          if (contactType === ContactType.NONE) return;\n          const fielderOptions = {\n            options: getFielderOptionsForContactType(contactType, false, fourOutfielders),\n          };\n          if (outs === 2) {\n            return { fielderOptions };\n          }\n          if (contactType === ContactType.GROUNDER) {\n            moveRunnersOnGroundBall(newRunners);\n          }\n          return {\n            fielderOptions,\n            runnerOptions: getRunnerOptions(\n              newRunners,\n              outs + 1,\n              {},\n              contactType === ContactType.GROUNDER\n            ),\n          };\n        },\n      };\n\n    case PlateAppearanceType.SACRIFICE_FLY:\n      const fielderOptions = { options: makeFielderOptions(getOutfieldPositions(fourOutfielders)) };\n      if (_.size(runners) === 1) {\n        return { kind: 'sacrificeFly', fielderOptions };\n      }\n\n      return {\n        kind: 'sacrificeFly',\n        fielderOptions,\n        runnersScoredOptions: _.range(1, _.size(runners) + 1),\n        getNextOptions: numScored => {\n          const newRunners = { ...runners };\n          _.times(numScored, () => {\n            moveRunner(newRunners, getLeadRunner(newRunners)![0], null);\n          });\n\n          return getRunnerOptions(newRunners, outs + 1, {}, false);\n        },\n      };\n\n    case PlateAppearanceType.FIELDERS_CHOICE:\n      return {\n        kind: 'fieldersChoice',\n        outOnPlayOptions: { runnerIds: _.values(runners) as string[] },\n        fielderOptions: {\n          options: getFielderOptionsForContactType(ContactType.GROUNDER, false, fourOutfielders),\n        },\n        getNextOptions:\n          outs < 2\n            ? runnerOut => {\n                const newRunners = { ...runners };\n                removeRunner(newRunners, runnerOut);\n                moveRunnersOnGroundBall(newRunners);\n                newRunners[BaseType.FIRST] = batterId;\n                return getRunnerOptions(newRunners, outs + 1);\n              }\n            : undefined,\n      };\n\n    case PlateAppearanceType.DOUBLE_PLAY:\n      const runnerIds = _.map(_.reverse(getSortedRunners(runners)), 1);\n      return {\n        kind: 'doublePlay',\n        contactOptions: {\n          options: getContactOptionsForOut(inPlayContactOptions),\n          required: true,\n        },\n        getNextOptions: contactType => {\n          const fielderOptions = {\n            options: getFielderOptionsForContactType(contactType, false, fourOutfielders),\n          };\n          if (_.size(runners) === 1) {\n            return {\n              fielderOptions,\n              outOnPlayOptions: {\n                runnerIds: [...runnerIds, batterId],\n                multiple: true,\n              },\n            };\n          }\n\n          if (contactType === ContactType.GROUNDER) {\n            return {\n              fielderOptions,\n              outOnPlayOptions: {\n                runnerIds: [...runnerIds, batterId],\n                multiple: true,\n              },\n              getNextOptions:\n                outs === 0\n                  ? runnersOut => {\n                      const newRunners = { ...runners };\n                      runnersOut.forEach(runnerId => removeRunner(newRunners, runnerId));\n                      moveRunnersOnGroundBall(newRunners);\n                      if (!runnersOut.includes(batterId)) {\n                        // the rare fielder's choice double play\n                        newRunners[BaseType.FIRST] = batterId;\n                      }\n                      return getRunnerOptions(newRunners, outs + 2);\n                    }\n                  : undefined,\n            };\n          }\n\n          return {\n            outOnPlayOptions: { runnerIds },\n            fielderOptions,\n            getNextOptions:\n              outs === 0\n                ? runnersOut => {\n                    const newRunners = { ...runners };\n                    removeRunner(newRunners, runnersOut[0]);\n                    return getRunnerOptions(newRunners, outs + 2);\n                  }\n                : undefined,\n          };\n        },\n      };\n\n    default:\n      const [defaultRunnerPositions] = getDefaultRunnersAfterPlateAppearance(\n        runners,\n        paType,\n        batterId\n      );\n\n      const runnersToBases = _.invert(runners) as Record<string, BaseType>;\n      const expectedBases = _.mapValues(runnersToBases, (base: BaseType) =>\n        getNewBase(base, getNumBasesForPlateAppearance(paType))\n      );\n\n      return {\n        kind: 'hit',\n        contactOptions: { options: getContactOptionsForHit() },\n        runnerOptions: getRunnerOptions(defaultRunnerPositions, outs, expectedBases),\n        getNextOptions: contactType => ({\n          options: getFielderOptionsForContactType(contactType, true, fourOutfielders),\n        }),\n      };\n  }\n};\n\nexport const getExtraRunnerMovementForPlateAppearance = (\n  allRunnerChoices: Record<string, BasepathOutcome>\n) => {\n  const basesTaken: Record<string, BaseType | null> = {};\n  const outsOnBasepaths: Record<string, BaseType | null> = {};\n\n  _.forEach(allRunnerChoices, (outcome, runnerId) => {\n    if (outcome.attemptedAdvance) {\n      if (outcome.successfulAdvance) {\n        basesTaken[runnerId] = outcome.endBase;\n      } else {\n        outsOnBasepaths[runnerId] = outcome.endBase;\n      }\n    }\n  });\n\n  return { basesTaken, outsOnBasepaths };\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nimport { getShortPlayerName, getAllPlayersList } from 'state/players/selectors';\nimport { getPlateAppearanceDetailPrompt } from 'state/prompts/prompts';\nimport { getAvailablePositionsForTeam, shouldTeamUseFourOutfielders } from './utils';\n\nimport { AppState } from 'state/store';\nimport {\n  BaseRunners,\n  TeamRole,\n  PlateAppearanceType,\n  HalfInning,\n  FieldingPosition,\n  GameStatus,\n  Team,\n} from './types';\n\nconst MIN_PLAYERS_TO_PLAY = 8;\n\nexport const getTeams = (state: AppState) => state.game.present.teams;\n\nexport const getRunners = (state: AppState) => state.game.present.runners;\nexport const getNumOuts = (state: AppState) => state.game.present.outs;\nexport const getScore = (state: AppState) => state.game.present.score;\nexport const getHalfInning = (state: AppState) => state.game.present.halfInning;\nexport const getInning = (state: AppState) => state.game.present.inning;\nexport const getCurrentBatter = (state: AppState) => state.game.present.atBat;\n\nexport const getBattingTeam = createSelector(getHalfInning, half =>\n  half === HalfInning.BOTTOM ? TeamRole.HOME : TeamRole.AWAY\n);\n\nexport const getBattingLineup = createSelector(\n  getTeams,\n  getBattingTeam,\n  (teams, battingTeam) => teams[battingTeam].lineup\n);\n\nexport const getAvailablePositions = (state: AppState, team: TeamRole) =>\n  getAvailablePositionsForTeam(getTeams(state)[team]);\n\nexport const doesFieldingTeamHaveFourOutfielders = createSelector(\n  getTeams,\n  getHalfInning,\n  (teams, halfInning) => shouldTeamUseFourOutfielders(teams[1 - halfInning])\n);\n\nexport const getRunnerNames = createSelector(\n  state => state,\n  getRunners,\n  (state, runners): BaseRunners =>\n    _.mapValues<BaseRunners>(runners, (id: string) => getShortPlayerName(state, id))\n);\n\nconst getBatter = (state: AppState) => state.game.present.atBat;\nexport const getBatterName = createSelector(\n  state => state,\n  getBatter,\n  (state, batterId) => (batterId ? getShortPlayerName(state, batterId) : '')\n);\n\nexport const getPlayerAtPositionFromTeams = (\n  teams: [Team, Team],\n  team: TeamRole,\n  position: FieldingPosition\n) => _.findKey(teams[team].positions, p => p === position)!;\n\nexport const getPlayerAtPosition = (state: AppState, team: TeamRole, position: FieldingPosition) =>\n  getPlayerAtPositionFromTeams(getTeams(state), team, position);\n\nexport const getPlayerPosition = (state: AppState, playerId: string) => {\n  const { positions } = _.find(getTeams(state), ({ lineup }) => lineup.includes(playerId))!;\n  return positions[playerId];\n};\n\nexport const getLineups = createSelector(\n  getTeams,\n  teams => teams.map(team => team.lineup) as [string[], string[]]\n);\nexport const getLineup = (state: AppState, teamRole: TeamRole) => getTeams(state)[teamRole].lineup;\n\nexport const getPlayersNotInGame = createSelector(\n  getAllPlayersList,\n  getLineups,\n  (allPlayers, lineups) => {\n    const allPlayersInGame = _.flatten(lineups);\n    return allPlayers.filter(({ playerId }) => !allPlayersInGame.includes(playerId));\n  }\n);\n\nexport const canStartGame = createSelector(\n  getLineups,\n  ([{ length: numAwayPlayers }, { length: numHomePlayers }]) =>\n    Math.abs(numAwayPlayers - numHomePlayers) <= 1 &&\n    numAwayPlayers >= MIN_PLAYERS_TO_PLAY &&\n    numHomePlayers >= MIN_PLAYERS_TO_PLAY\n);\n\nexport const getGameStatus = (state: AppState) => state.game.present.status;\nexport const isGameInProgress = createSelector(\n  getGameStatus,\n  status => status === GameStatus.IN_PROGRESS\n);\nexport const isGameOver = createSelector(getGameStatus, status => status === GameStatus.FINISHED);\n\nexport const getPlateAppearanceOptions = createSelector(getRunners, getNumOuts, (runners, outs) => {\n  const notPossible: Set<PlateAppearanceType> = new Set();\n\n  if (!_.size(runners)) {\n    notPossible.add(PlateAppearanceType.FIELDERS_CHOICE);\n  }\n\n  if (outs === 2 || !_.size(runners)) {\n    notPossible.add(PlateAppearanceType.DOUBLE_PLAY);\n    notPossible.add(PlateAppearanceType.SACRIFICE_FLY);\n  }\n\n  return _.values(PlateAppearanceType).filter(paType => !notPossible.has(paType));\n});\n\nconst getNextBatter = (batterId: string | undefined, lineup: string[]) => {\n  const lineupIndex = _.findIndex(lineup, id => id === batterId);\n  if (lineupIndex === lineup.length - 1) {\n    return lineup[0];\n  }\n  return lineup[lineupIndex + 1];\n};\nexport const getOnDeckBatter = createSelector(getCurrentBatter, getBattingLineup, getNextBatter);\nexport const getInTheHoleBatter = createSelector(getOnDeckBatter, getBattingLineup, getNextBatter);\nexport const getOnDeckBatterName = createSelector(\n  state => state,\n  getOnDeckBatter,\n  getShortPlayerName\n);\nexport const getInTheHoleBatterName = createSelector(\n  state => state,\n  getInTheHoleBatter,\n  getShortPlayerName\n);\n\nexport const createPlateAppearancePromptSelector = (paType: PlateAppearanceType) =>\n  createSelector(\n    getCurrentBatter,\n    getNumOuts,\n    getRunners,\n    doesFieldingTeamHaveFourOutfielders,\n    (batterId, outs, runners, fourOutfielders) =>\n      getPlateAppearanceDetailPrompt(paType, batterId!, outs, runners, fourOutfielders)\n  );\n\nexport const getGameHistory = (state: AppState) => state.game.present.gameHistory;\n\nexport const getCurrentGameLength = (state: AppState) => state.game.present.gameLength;\nexport const getMinGameLength = createSelector(\n  getInning,\n  getHalfInning,\n  getScore,\n  (inning, halfInning, [awayScore, homeScore]) => {\n    if (halfInning === HalfInning.BOTTOM && homeScore > awayScore) {\n      return Math.max(7, inning + 1);\n    }\n    return Math.max(7, inning);\n  }\n);\nexport const getMaxGameLength = () => 12;\n\nexport const isGameInExtraInnings = createSelector(\n  getInning,\n  getCurrentGameLength,\n  (inning, gameLength) => inning > gameLength\n);\n\nexport const getPresent = (state: AppState) => state.game.present;\nexport const getPast = (state: AppState) => state.game.past;\nexport const getFuture = (state: AppState) => state.game.future;\n\nexport const isUndoPossible = createSelector(getPast, past => past.length > 0);\nexport const isRedoPossible = createSelector(getFuture, future => future.length > 0);\n","import { useEffect, EffectCallback } from 'react';\nimport { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\n\nimport { AppState, AppDispatch } from 'state/store';\n\n// eslint-disable-next-line\nexport const useMount = (effect: EffectCallback) => useEffect(effect, []);\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\n","import React, { CSSProperties } from 'react';\nimport { Table, TableBody, TableRow, TableCell, Box, Text } from 'grommet';\n\nimport {\n  getScore,\n  getBattingTeam,\n  getNumOuts,\n  getHalfInning,\n  getInning,\n} from 'state/game/selectors';\nimport { TeamRole, HalfInning } from 'state/game/types';\nimport { useAppSelector } from 'utils/hooks';\nimport { CaretUpFill, CaretDownFill } from 'grommet-icons';\n\nconst boldStyle: CSSProperties = { fontWeight: 'bold' };\n\nconst ScoreBug = () => {\n  const [awayScore, homeScore] = useAppSelector(getScore);\n  const battingTeam = useAppSelector(getBattingTeam);\n  const halfInning = useAppSelector(getHalfInning);\n  const inning = useAppSelector(getInning);\n  const numOuts = useAppSelector(getNumOuts);\n\n  return (\n    <Box direction=\"row\" gap=\"medium\" align=\"center\">\n      <Text>\n        {numOuts} {numOuts === 1 ? 'out' : 'outs'}\n      </Text>\n      <Box direction=\"row\" align=\"center\">\n        {halfInning === HalfInning.TOP ? <CaretUpFill /> : <CaretDownFill />}\n        <Text>{inning}</Text>\n      </Box>\n      <Table>\n        <TableBody>\n          <TableRow style={battingTeam === TeamRole.AWAY ? boldStyle : undefined}>\n            <TableCell scope=\"row\">Away</TableCell>\n            <TableCell>{awayScore}</TableCell>\n          </TableRow>\n          <TableRow style={battingTeam === TeamRole.HOME ? boldStyle : undefined}>\n            <TableCell scope=\"row\">Home</TableCell>\n            <TableCell>{homeScore}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Box>\n  );\n};\n\nexport default ScoreBug;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport undoable, { includeAction } from 'redux-undo';\n\nimport { reorderItemInList, moveItemBetweenLists } from 'utils/common';\nimport { getOnDeckBatter } from './partialSelectors';\nimport {\n  getAvailablePositionsForTeam,\n  shouldTeamUseFourOutfielders,\n  applyGameEvent,\n} from './utils';\n\nimport {\n  GameState,\n  Team,\n  AddPlayerPayload,\n  HalfInning,\n  GameEvent,\n  MovePlayerPayload,\n  ChangePlayerPositionPayload,\n  FieldingPosition,\n  GameStatus,\n} from './types';\n\nconst initialTeamState: Team = {\n  name: '',\n  lineup: [],\n  positions: {},\n};\n\nconst initialState: GameState = {\n  status: GameStatus.NOT_STARTED,\n  teams: [initialTeamState, initialTeamState],\n  inning: 1,\n  halfInning: HalfInning.TOP,\n  runners: {},\n  outs: 0,\n  gameHistory: [],\n  score: [0, 0],\n  gameLength: 9,\n};\n\nconst getNextAvailablePosition = (team: Team) => {\n  const takenPositions = _.values(team.positions);\n  const allPositions = getAvailablePositionsForTeam(team);\n  return allPositions.find(position => !takenPositions.includes(position))!;\n};\n\nconst updatePositions = (team: Team) => {\n  const fourOutfielders = shouldTeamUseFourOutfielders(team);\n  _.forEach(team.positions, (position, playerId) => {\n    if (fourOutfielders && position === FieldingPosition.CENTER_FIELD) {\n      if (!_.some(team.positions, position => position === FieldingPosition.LEFT_CENTER)) {\n        team.positions[playerId] = FieldingPosition.LEFT_CENTER;\n      } else if (!_.some(team.positions, position => position === FieldingPosition.RIGHT_CENTER)) {\n        team.positions[playerId] = FieldingPosition.RIGHT_CENTER;\n      } else {\n        team.positions[playerId] = getNextAvailablePosition(team);\n      }\n    } else if (\n      !fourOutfielders &&\n      [FieldingPosition.RIGHT_CENTER, FieldingPosition.LEFT_CENTER].includes(position)\n    ) {\n      if (!_.some(team.positions, position => position === FieldingPosition.CENTER_FIELD)) {\n        team.positions[playerId] = FieldingPosition.CENTER_FIELD;\n      } else {\n        team.positions[playerId] = getNextAvailablePosition(team);\n      }\n    }\n  });\n};\n\nconst cleanUpAfterPlateAppearance = (state: GameState) => {\n  const nextBatter = getOnDeckBatter(state);\n  if (state.outs === 3) {\n    state.atBat = state.upNextHalfInning;\n    state.upNextHalfInning = nextBatter;\n    state.runners = {};\n    state.outs = 0;\n    if (state.halfInning === HalfInning.BOTTOM) {\n      state.inning++;\n    }\n    state.halfInning = 1 - state.halfInning;\n  } else {\n    state.atBat = nextBatter;\n  }\n};\n\nconst { actions: gameActions, reducer } = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    addPlayerToGame(state, { payload }: PayloadAction<AddPlayerPayload>) {\n      const team = state.teams[payload.team];\n      if (!team.lineup.includes(payload.playerId)) {\n        team.lineup.push(payload.playerId);\n        team.positions[payload.playerId] = getNextAvailablePosition(team);\n        updatePositions(team);\n      }\n    },\n    movePlayer(state, { payload }: PayloadAction<MovePlayerPayload>) {\n      if (payload.fromTeam === payload.toTeam) {\n        const team = state.teams[payload.fromTeam];\n        team.lineup = reorderItemInList(team.lineup, payload.startIndex, payload.endIndex);\n      } else {\n        const sourceTeam = state.teams[payload.fromTeam];\n        const destTeam = state.teams[payload.toTeam];\n        const [newSourceLineup, newDestLineup] = moveItemBetweenLists(\n          sourceTeam.lineup,\n          destTeam.lineup,\n          payload.startIndex,\n          payload.endIndex\n        );\n        const playerId = sourceTeam.lineup[payload.startIndex];\n        sourceTeam.lineup = newSourceLineup;\n        destTeam.lineup = newDestLineup;\n        const currentPlayerWithPosition = _.findKey(\n          destTeam.positions,\n          position => position === sourceTeam.positions[playerId]\n        );\n        if (\n          currentPlayerWithPosition ||\n          !getAvailablePositionsForTeam(destTeam).includes(sourceTeam.positions[playerId])\n        ) {\n          destTeam.positions[playerId] = getNextAvailablePosition(destTeam);\n        } else {\n          destTeam.positions[playerId] = sourceTeam.positions[playerId];\n        }\n        delete sourceTeam.positions[playerId];\n        updatePositions(sourceTeam);\n        updatePositions(destTeam);\n      }\n    },\n    removePlayerFromGame(state, { payload }: PayloadAction<string>) {\n      state.teams.forEach(team => {\n        team.lineup = team.lineup.filter(playerId => playerId !== payload);\n        delete team.positions[payload];\n        updatePositions(team);\n      });\n    },\n    changePlayerPosition(state, { payload }: PayloadAction<ChangePlayerPositionPayload>) {\n      const { positions } = state.teams.find(({ lineup }) => lineup.includes(payload.playerId))!;\n      const currentPlayerWithPosition = _.findKey(\n        positions,\n        position => position === payload.position\n      );\n      if (currentPlayerWithPosition) {\n        positions[currentPlayerWithPosition] = positions[payload.playerId];\n      }\n      positions[payload.playerId] = payload.position;\n    },\n    startGame(state) {\n      state.atBat = state.teams[0].lineup[0];\n      state.upNextHalfInning = state.teams[1].lineup[0];\n      state.status = GameStatus.IN_PROGRESS;\n    },\n    recordGameEvent(state, { payload }: PayloadAction<GameEvent>) {\n      applyGameEvent(state, payload);\n\n      const [awayScore, homeScore] = state.score;\n      const homeLeadingAfterTop =\n        state.outs === 3 && state.halfInning === HalfInning.TOP && awayScore < homeScore;\n      const awayLeadingAfterBottom =\n        state.outs === 3 && state.halfInning === HalfInning.BOTTOM && awayScore > homeScore;\n\n      if (\n        state.inning >= state.gameLength &&\n        (homeLeadingAfterTop ||\n          awayLeadingAfterBottom ||\n          (state.halfInning === HalfInning.BOTTOM && awayScore < homeScore))\n      ) {\n        state.status = GameStatus.FINISHED;\n      } else {\n        cleanUpAfterPlateAppearance(state);\n      }\n    },\n    changeGameLength(state, { payload }: PayloadAction<number>) {\n      state.gameLength = payload;\n    },\n    incrementGameLength(state) {\n      state.gameLength += 1;\n    },\n    decrementGameLength(state) {\n      state.gameLength -= 1;\n    },\n    extendGame(state) {\n      state.gameLength = Math.max(state.inning, state.gameLength) + 1;\n      state.status = GameStatus.IN_PROGRESS;\n      cleanUpAfterPlateAppearance(state);\n    },\n    resetGame(state) {\n      return {\n        ...initialState,\n        teams: state.teams,\n      };\n    },\n    fullResetGame() {\n      return { ...initialState };\n    },\n  },\n});\n\nexport { gameActions };\nexport default undoable(reducer, {\n  filter: includeAction(gameActions.recordGameEvent.type),\n  limit: 10,\n  syncFilter: true,\n});\n","export const reorderItemInList = <T>(list: T[], startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport const moveItemBetweenLists = <T>(\n  sourceList: T[],\n  destList: T[],\n  startIndex: number,\n  endIndex: number\n) => {\n  const sourceClone = Array.from(sourceList);\n  const destClone = Array.from(destList);\n  const [removed] = sourceClone.splice(startIndex, 1);\n\n  destClone.splice(endIndex, 0, removed);\n  return [sourceClone, destClone];\n};\n","import React, { useCallback, ChangeEvent, useState } from 'react';\nimport { Box, Button, DropButton, Heading, RangeInput, Text } from 'grommet';\nimport { Add, PowerReset, Subtract } from 'grommet-icons';\n\nimport {\n  getCurrentGameLength,\n  getMaxGameLength,\n  getMinGameLength,\n  isGameInExtraInnings,\n  isGameInProgress,\n} from 'state/game/selectors';\nimport { gameActions } from 'state/game/slice';\nimport { useAppDispatch, useAppSelector } from 'utils/hooks';\n\nconst ResetConfirm = () => {\n  const dispatch = useAppDispatch();\n\n  const onConfirm = useCallback(() => {\n    dispatch(gameActions.resetGame());\n  }, [dispatch]);\n\n  return (\n    <Box pad=\"small\" width=\"small\" gap=\"small\">\n      <Text textAlign=\"center\" size=\"small\">\n        Are you sure you want to reset the game?\n      </Text>\n      <Button size=\"small\" color=\"status-critical\" label=\"Reset\" onClick={onConfirm} />\n    </Box>\n  );\n};\n\nconst SettingsMenu = () => {\n  const dispatch = useAppDispatch();\n\n  const minInnings = useAppSelector(getMinGameLength);\n  const maxInnings = useAppSelector(getMaxGameLength);\n  const currentGameLength = useAppSelector(getCurrentGameLength);\n  const inProgress = useAppSelector(isGameInProgress);\n  const inExtraInnings = useAppSelector(isGameInExtraInnings);\n\n  const [resetConfirmOpen, setResetConfirmOpen] = useState(false);\n\n  const handleChangeGameLength = useCallback(\n    ({ target }: ChangeEvent<HTMLInputElement>) => {\n      dispatch(gameActions.changeGameLength(parseInt(target.value)));\n    },\n    [dispatch]\n  );\n\n  const handleClickSubtractGameLength = useCallback(\n    () => dispatch(gameActions.decrementGameLength()),\n    [dispatch]\n  );\n  const handleClickAddGameLength = useCallback(() => dispatch(gameActions.incrementGameLength()), [\n    dispatch,\n  ]);\n\n  return (\n    <Box pad={{ vertical: 'medium', horizontal: 'small' }} gap=\"medium\">\n      <Box>\n        <Heading level={5} margin=\"none\" alignSelf=\"center\">\n          Game Length\n        </Heading>\n        <Box direction=\"row\" align=\"center\" gap=\"xsmall\">\n          <Button\n            icon={<Subtract />}\n            onClick={handleClickSubtractGameLength}\n            disabled={currentGameLength === minInnings || inExtraInnings}\n          />\n          <RangeInput\n            step={1}\n            min={minInnings}\n            max={maxInnings}\n            value={currentGameLength}\n            onChange={handleChangeGameLength}\n            disabled={inExtraInnings}\n          />\n          <Button\n            icon={<Add />}\n            onClick={handleClickAddGameLength}\n            disabled={currentGameLength === maxInnings || inExtraInnings}\n          />\n        </Box>\n        <Text\n          size=\"small\"\n          alignSelf=\"center\"\n          color={inExtraInnings ? 'status-critical' : undefined}\n        >\n          {inExtraInnings ? 'In extra' : currentGameLength} innings\n        </Text>\n      </Box>\n      {inProgress && (\n        <DropButton\n          label=\"Reset game\"\n          icon={<PowerReset color=\"status-critical\" />}\n          color=\"status-critical\"\n          alignSelf=\"center\"\n          open={resetConfirmOpen}\n          onOpen={() => setResetConfirmOpen(true)}\n          dropContent={<ResetConfirm />}\n          dropProps={{ align: { top: 'bottom' } }}\n          onClose={() => setResetConfirmOpen(false)}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default SettingsMenu;\n","import React, { FC } from 'react';\nimport { Blank, IconProps } from 'grommet-icons';\nimport { BaseRunners, BaseType } from 'state/game/types';\n\ninterface Props {\n  bases: BaseRunners;\n}\n\nconst BasesPreview: FC<IconProps & Props> = ({ bases, ...props }) => {\n  const { [BaseType.FIRST]: first, [BaseType.SECOND]: second, [BaseType.THIRD]: third } = bases;\n  return (\n    <Blank size=\"large\" {...props}>\n      <svg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        viewBox=\"0 0 48 48\"\n        width=\"24\"\n        height=\"24\"\n      >\n        <defs>\n          <path d=\"M24 25.73L13.11 14.84L24 3.95L34.89 14.84L24 25.73Z\" id=\"a1RZhYfL4q\" />\n          <clipPath id=\"clipg3BqRYPvvE\">\n            <use xlinkHref=\"#a1RZhYfL4q\" opacity=\"1\" />\n          </clipPath>\n          <path d=\"M36.31 38.05L25.42 27.16L36.31 16.27L47.2 27.16L36.31 38.05Z\" id=\"aqb5ZIsm9\" />\n          <clipPath id=\"clipa6tqurtbA\">\n            <use xlinkHref=\"#aqb5ZIsm9\" opacity=\"1\" />\n          </clipPath>\n          <path d=\"M11.69 38.05L0.8 27.16L11.69 16.27L22.58 27.16L11.69 38.05Z\" id=\"bosriBPNJ\" />\n          <clipPath id=\"cliph2h312r3G7\">\n            <use xlinkHref=\"#bosriBPNJ\" opacity=\"1\" />\n          </clipPath>\n        </defs>\n        <g>\n          <g>\n            <g>\n              <use\n                xlinkHref=\"#aqb5ZIsm9\"\n                opacity=\"1\"\n                fill=\"#000000\"\n                fillOpacity={first ? '1' : '0'}\n              />\n              <g clipPath=\"url(#clipa6tqurtbA)\">\n                <use\n                  xlinkHref=\"#aqb5ZIsm9\"\n                  opacity=\"1\"\n                  fillOpacity=\"0\"\n                  stroke=\"#000000\"\n                  strokeWidth=\"2\"\n                  strokeOpacity=\"1\"\n                />\n              </g>\n            </g>\n            <g>\n              <use\n                xlinkHref=\"#a1RZhYfL4q\"\n                opacity=\"1\"\n                fill=\"#000000\"\n                fillOpacity={second ? '1' : '0'}\n              />\n              <g clipPath=\"url(#clipg3BqRYPvvE)\">\n                <use\n                  xlinkHref=\"#a1RZhYfL4q\"\n                  opacity=\"1\"\n                  fillOpacity=\"0\"\n                  stroke=\"#000000\"\n                  strokeWidth=\"2\"\n                  strokeOpacity=\"1\"\n                />\n              </g>\n            </g>\n            <g>\n              <use\n                xlinkHref=\"#bosriBPNJ\"\n                opacity=\"1\"\n                fill=\"#000000\"\n                fillOpacity={third ? '1' : '0'}\n              />\n              <g clipPath=\"url(#cliph2h312r3G7)\">\n                <use\n                  xlinkHref=\"#bosriBPNJ\"\n                  opacity=\"1\"\n                  fillOpacity=\"0\"\n                  stroke=\"#000000\"\n                  strokeWidth=\"2\"\n                  strokeOpacity=\"1\"\n                />\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n    </Blank>\n  );\n};\n\nexport default BasesPreview;\n","import React, { useCallback, useRef, useState } from 'react';\nimport { Header, Nav, Button, Box, Drop } from 'grommet';\nimport { SettingsOption } from 'grommet-icons';\nimport { Route, useHistory } from 'react-router-dom';\n\nimport AnchorLink from './AnchorLink';\nimport ScoreBug from './ScoreBug';\nimport SettingsMenu from './SettingsMenu';\n\nimport { canStartGame, getRunnerNames, isGameInProgress } from 'state/game/selectors';\nimport { gameActions } from 'state/game/slice';\nimport { useAppDispatch, useAppSelector } from 'utils/hooks';\nimport BasesPreview from './BasesPreview';\n\nconst TopBar = () => {\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  const gameInProgress = useAppSelector(isGameInProgress);\n  const gameCanStart = useAppSelector(canStartGame);\n  const runners = useAppSelector(getRunnerNames);\n\n  const startGame = useCallback(() => {\n    dispatch(gameActions.startGame());\n    history.push('/field');\n  }, [dispatch, history]);\n\n  const settingsButtonRef = useRef<HTMLButtonElement | null>(null);\n  const [showSettings, setShowSettings] = useState(false);\n\n  const toggleSettings = useCallback(() => setShowSettings(show => !show), [setShowSettings]);\n\n  return (\n    <Header background=\"brand\">\n      <Nav direction=\"row\" pad=\"medium\">\n        <AnchorLink to=\"/teams\">Teams</AnchorLink>\n        {gameInProgress && <AnchorLink to=\"/field\">Field</AnchorLink>}\n        {gameInProgress && <AnchorLink to=\"/box-score\">Box Score</AnchorLink>}\n        {gameInProgress && <AnchorLink to=\"/plays\">Plays</AnchorLink>}\n      </Nav>\n      <Box direction=\"row\" margin={{ right: 'small' }}>\n        {gameInProgress && (\n          <Box alignSelf=\"center\" margin={{ right: 'medium' }}>\n            <BasesPreview bases={runners} color=\"light-1\" />\n          </Box>\n        )}\n        {gameInProgress ? (\n          <ScoreBug />\n        ) : (\n          <Route path=\"/teams\">\n            <Button\n              plain={false}\n              disabled={!gameCanStart}\n              onClick={startGame}\n              margin={{ right: 'small' }}\n            >\n              Start Game\n            </Button>\n          </Route>\n        )}\n        <Button\n          margin={{ left: 'small' }}\n          icon={<SettingsOption />}\n          plain={false}\n          alignSelf=\"center\"\n          color=\"light-1\"\n          ref={settingsButtonRef}\n          onClick={toggleSettings}\n        />\n        {showSettings && settingsButtonRef.current && (\n          <Drop target={settingsButtonRef.current} align={{ top: 'bottom', right: 'right' }}>\n            <SettingsMenu />\n          </Drop>\n        )}\n      </Box>\n    </Header>\n  );\n};\n\nexport default TopBar;\n","import React, {\n  Children,\n  createContext,\n  FC,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from 'react';\nimport { Accordion, AccordionPanel, Box, Text } from 'grommet';\nimport { Edit } from 'grommet-icons';\nimport _ from 'lodash';\n\nconst promptAccordionContext = createContext(false);\n\nconst PromptAccordion: FC = ({ children }) => {\n  const numPanels = Children.count(children);\n\n  const [activeIndices, setActiveIndices] = useState(_.range(numPanels));\n\n  const handleActiveIndicesChange = useCallback(\n    (indices: number[]) => {\n      setActiveIndices(currentIndices => {\n        if (indices.length > currentIndices.length) {\n          return _.sortBy(indices).slice(1);\n        }\n        return currentIndices;\n      });\n    },\n    [setActiveIndices]\n  );\n\n  return (\n    <Accordion\n      multiple\n      activeIndex={activeIndices}\n      onActive={handleActiveIndicesChange}\n      gap=\"small\"\n    >\n      {Children.map(children, (child, i) => (\n        <promptAccordionContext.Provider key={i} value={activeIndices.includes(i)}>\n          {child}\n        </promptAccordionContext.Provider>\n      ))}\n    </Accordion>\n  );\n};\n\ninterface PromptAccordionPanelProps {\n  label: string;\n  preview: ReactNode;\n}\n\nexport const PromptAccordionPanel: FC<PromptAccordionPanelProps> = ({\n  label,\n  preview,\n  children,\n}) => {\n  const active = useContext(promptAccordionContext);\n\n  return (\n    <AccordionPanel\n      header={\n        <Box\n          direction=\"row\"\n          justify=\"between\"\n          pad=\"small\"\n          round=\"4px\"\n          background={active ? undefined : 'brand'}\n        >\n          <Text weight=\"bold\">{label}</Text>\n          {!active && (\n            <>\n              {preview}\n              <Edit />\n            </>\n          )}\n        </Box>\n      }\n    >\n      {children}\n    </AccordionPanel>\n  );\n};\n\nexport default PromptAccordion;\n","import { createNextState } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nimport { getExtraRunnerMovementForPlateAppearance } from './prompts';\n\nimport { AppState } from 'state/store';\nimport { PlateAppearanceType, PlateAppearanceResult } from 'state/game/types';\nimport { applyGameEvent } from 'state/game/utils';\nimport { getPresent } from 'state/game/selectors';\n\nexport const getSelectedRunnerOption = (state: AppState, runnerId: string) =>\n  state.prompts.runnerChoices[runnerId];\n\nexport const getSelectedContactOption = (state: AppState) => state.prompts.contactChoice;\nexport const getSelectedFielderOption = (state: AppState) => state.prompts.fielderChoice;\nexport const getSelectedOutOnPlayOptions = (state: AppState) => state.prompts.outOnPlayChoices;\n\nexport const getSelectedSacFlyRunsScored = (state: AppState) =>\n  state.prompts.sacFlyRunsScoredChoice;\n\nexport const getAllRunnerChoices = (state: AppState) => state.prompts.runnerChoices;\n\nexport const getPlateAppearanceResult = (\n  state: AppState,\n  type: PlateAppearanceType\n): PlateAppearanceResult => ({\n  kind: 'plateAppearance',\n  type,\n  contactType: getSelectedContactOption(state)?.contactType,\n  fieldedBy: getSelectedFielderOption(state)?.position,\n  runnersOutOnPlay: getSelectedOutOnPlayOptions(state),\n  runsScoredOnSacFly: getSelectedSacFlyRunsScored(state),\n  ...getExtraRunnerMovementForPlateAppearance(getAllRunnerChoices(state)),\n});\n\nexport const getPlateAppearancePreview = (state: AppState, type: PlateAppearanceType) => {\n  const event = getPlateAppearanceResult(state, type);\n  const { gameHistory, runners, outs } = createNextState(getPresent(state), state =>\n    applyGameEvent(state, event)\n  );\n  const { runnersScored } = _.last(gameHistory)!;\n  return { runners, runnersScored, outs };\n};\n","import React, { FC, useContext } from 'react';\nimport { Box, Text } from 'grommet';\n\nimport BasesPreview from 'components/BasesPreview';\n\nimport { getPlateAppearancePreview } from 'state/prompts/selectors';\nimport { useAppSelector } from 'utils/hooks';\nimport { promptContext } from './EventDetailPrompt';\n\nconst PlateAppearancePreview: FC = () => {\n  const paType = useContext(promptContext);\n\n  const {\n    runners,\n    runnersScored: { length: runs },\n    outs,\n  } = useAppSelector(state => getPlateAppearancePreview(state, paType));\n\n  return (\n    <Box direction=\"row\" align=\"center\" alignSelf=\"center\" gap=\"medium\">\n      <Text weight=\"bold\">Preview</Text>\n      <Box\n        round\n        direction=\"row\"\n        align=\"center\"\n        gap=\"small\"\n        border={!!runs}\n        pad={runs ? 'xsmall' : undefined}\n      >\n        <Box round direction=\"row\" align=\"center\" gap=\"small\" background=\"brand\" pad=\"small\">\n          <BasesPreview bases={runners} />\n          <Text>{outs === 3 ? 'Inning over' : `${outs} out${outs !== 1 ? 's' : ''}`}</Text>\n        </Box>\n        {!!runs && (\n          <Text>\n            {runs} {runs > 1 ? 'runs score' : 'run scores'}.\n          </Text>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default PlateAppearancePreview;\n","import React, { ReactNode, useCallback } from 'react';\nimport { Box, BoxProps, Text } from 'grommet';\nimport _ from 'lodash';\n\ninterface BaseProps<T> {\n  options: (T | { value: T; label: ReactNode; negative?: boolean })[];\n}\n\ninterface SingleChoiceProps<T> extends BaseProps<T> {\n  multiple?: false;\n  value?: T;\n  onChange: (value: T) => void;\n}\n\ninterface MultipleChoiceProps<T> extends BaseProps<T> {\n  multiple: true;\n  value: T[];\n  onChange: (value: T[]) => void;\n}\n\ntype Props<T> = SingleChoiceProps<T> | MultipleChoiceProps<T>;\n\nconst OptionSelector = <T extends any>({\n  options,\n  multiple,\n  value,\n  onChange,\n  ...props\n}: Props<T> & BoxProps) => {\n  const isSelected = useCallback(\n    (val: T) => (multiple ? (value as T[]).includes(val) : val === value),\n    [multiple, value]\n  );\n\n  const handleClickOption = useCallback(\n    (clickedVal: T) => () => {\n      if (multiple && _.isArray(value)) {\n        (onChange as MultipleChoiceProps<T>['onChange'])(\n          value.includes(clickedVal)\n            ? value.filter(val => val !== clickedVal)\n            : value.concat(clickedVal)\n        );\n      } else {\n        (onChange as SingleChoiceProps<T>['onChange'])(clickedVal);\n      }\n    },\n    [multiple, value, onChange]\n  );\n\n  return (\n    <Box direction=\"row\" round border overflow=\"hidden\" {...props}>\n      {options.map((option, index) => {\n        let label, value, negative;\n        if (_.isObject(option) && 'label' in option) {\n          label = option.label;\n          value = option.value;\n          negative = option.negative;\n        } else {\n          label = value = option;\n          negative = false;\n        }\n        const selected = isSelected(value);\n\n        return (\n          <Box\n            key={`${index}_of_${options.length}`}\n            flex\n            width={typeof label === 'string' && label.length < 4 ? 'xxsmall' : 'xsmall'}\n            onClick={handleClickOption(value)}\n            background={selected ? 'brand' : negative ? 'status-critical-light' : undefined}\n            hoverIndicator={!selected}\n            pad=\"small\"\n            align=\"center\"\n            justify=\"center\"\n            border={index > 0 ? { side: 'left', size: '1px' } : undefined}\n          >\n            <Text textAlign=\"center\">{label as ReactNode}</Text>\n          </Box>\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default OptionSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { BasepathOutcome, FielderOption, ContactOption } from './types';\n\ninterface PromptState {\n  runnerChoices: Record<string, BasepathOutcome>;\n  contactChoice?: ContactOption;\n  fielderChoice?: FielderOption;\n  outOnPlayChoices: string[];\n  sacFlyRunsScoredChoice: number;\n}\n\nconst initialState: PromptState = {\n  runnerChoices: {},\n  outOnPlayChoices: [],\n  sacFlyRunsScoredChoice: 1,\n};\n\nconst { reducer, actions: promptActions } = createSlice({\n  name: 'prompt',\n  initialState,\n  reducers: {\n    setRunnerChoice(\n      state,\n      { payload }: PayloadAction<{ runnerId: string; option: BasepathOutcome }>\n    ) {\n      state.runnerChoices[payload.runnerId] = payload.option;\n    },\n    clearRunnerChoice(state, { payload }: PayloadAction<string>) {\n      delete state.runnerChoices[payload];\n    },\n    setContactChoice(state, { payload }: PayloadAction<ContactOption>) {\n      state.contactChoice = payload;\n    },\n    clearContactChoice(state) {\n      delete state.contactChoice;\n    },\n    setFielderChoice(state, { payload }: PayloadAction<FielderOption>) {\n      state.fielderChoice = payload;\n    },\n    clearFielderChoice(state) {\n      delete state.fielderChoice;\n    },\n    setOutOnPlayChoices(state, { payload }: PayloadAction<string[]>) {\n      state.outOnPlayChoices = payload;\n    },\n    clearOutOnPlayChoices(state) {\n      state.outOnPlayChoices = [];\n    },\n    setSacFlyRunsScoredChoice(state, { payload }: PayloadAction<number>) {\n      state.sacFlyRunsScoredChoice = payload;\n    },\n    resetSacFlyRunsScoredChoice(state) {\n      state.sacFlyRunsScoredChoice = 1;\n    },\n    clearPrompt: () => initialState,\n  },\n});\n\nexport default reducer;\nexport { promptActions };\n","import React, { FC, useMemo, useCallback, useEffect } from 'react';\n\nimport OptionSelector from '../OptionSelector';\n\nimport { getSelectedContactOption } from 'state/prompts/selectors';\nimport { promptActions } from 'state/prompts/slice';\nimport { useAppSelector, useAppDispatch } from 'utils/hooks';\n\nimport { ContactOptions } from 'state/prompts/types';\n\nconst ContactPrompt: FC<ContactOptions> = ({ options, required }) => {\n  const dispatch = useAppDispatch();\n\n  useEffect(\n    () => () => {\n      dispatch(promptActions.clearContactChoice());\n    },\n    [dispatch]\n  );\n\n  const selectedOption = useAppSelector(getSelectedContactOption);\n\n  const formattedOptions = useMemo(() => options.map(({ label, id }) => ({ label, value: id })), [\n    options,\n  ]);\n\n  const handleChange = useCallback(\n    (value: number) => {\n      dispatch(promptActions.setContactChoice(options[value]));\n    },\n    [dispatch, options]\n  );\n\n  return (\n    <OptionSelector options={formattedOptions} value={selectedOption?.id} onChange={handleChange} />\n  );\n};\n\nexport default ContactPrompt;\n","import React, { FC, useMemo, useCallback, useEffect } from 'react';\nimport { Box, Heading } from 'grommet';\n\nimport OptionSelector from '../OptionSelector';\n\nimport { FielderOptions } from 'state/prompts/types';\nimport { getSelectedFielderOption } from 'state/prompts/selectors';\nimport { promptActions } from 'state/prompts/slice';\nimport { useAppSelector, useAppDispatch } from 'utils/hooks';\n\nconst FielderPrompt: FC<FielderOptions & { showTitle?: boolean }> = ({\n  options,\n  showTitle = true,\n}) => {\n  const dispatch = useAppDispatch();\n\n  useEffect(\n    () => () => {\n      dispatch(promptActions.clearFielderChoice());\n    },\n    [dispatch]\n  );\n\n  const selectedOption = useAppSelector(getSelectedFielderOption);\n\n  const formattedOptions = useMemo(() => options.map(({ label, id }) => ({ label, value: id })), [\n    options,\n  ]);\n\n  const handleChange = useCallback(\n    (value: number) => dispatch(promptActions.setFielderChoice(options[value])),\n    [dispatch, options]\n  );\n\n  return (\n    <Box flex>\n      {showTitle && (\n        <Heading level={4} margin={{ top: 'none', bottom: 'xsmall' }} alignSelf=\"center\">\n          Hit to\n        </Heading>\n      )}\n      <OptionSelector\n        options={formattedOptions}\n        value={selectedOption?.id}\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n\nexport default FielderPrompt;\n","import React, { FC } from 'react';\nimport { Box } from 'grommet';\n\nimport ContactPrompt from '../subprompts/ContactPrompt';\nimport FielderPrompt from '../subprompts/FielderPrompt';\nimport { PromptAccordionPanel } from '../PromptAccordion';\n\nimport { ContactOptions, FielderOptions } from 'state/prompts/types';\n\ninterface Props {\n  contactOptions: ContactOptions;\n  fielderOptions?: FielderOptions;\n}\n\nconst ContactPanel: FC<Props> = ({ contactOptions, fielderOptions }) => (\n  <PromptAccordionPanel label=\"Contact\" preview=\"\">\n    <Box gap=\"small\">\n      <ContactPrompt {...contactOptions} />\n      {fielderOptions && <FielderPrompt {...fielderOptions} showTitle={false} />}\n    </Box>\n  </PromptAccordionPanel>\n);\n\nexport default ContactPanel;\n","import React, { FC, useMemo, useCallback, useEffect } from 'react';\nimport { Box, Text } from 'grommet';\nimport { useDispatch } from 'react-redux';\n\nimport OptionSelector from '../OptionSelector';\n\nimport { getShortPlayerName } from 'state/players/selectors';\nimport { getSelectedRunnerOption } from 'state/prompts/selectors';\nimport { promptActions } from 'state/prompts/slice';\nimport { useAppSelector } from 'utils/hooks';\nimport { getRunnerOptionLabel } from 'utils/labels';\n\nimport { RunnerOptions } from 'state/prompts/types';\n\nconst RunnerPrompt: FC<RunnerOptions> = ({\n  runnerId,\n  options,\n  defaultOption,\n  getTrailingRunnerOptions,\n}) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(promptActions.setRunnerChoice({ runnerId, option: options[defaultOption] }));\n    return () => {\n      dispatch(promptActions.clearRunnerChoice(runnerId));\n    };\n  }, [dispatch, runnerId, options, defaultOption]);\n\n  const selectedOption = useAppSelector(state => getSelectedRunnerOption(state, runnerId));\n  const runnerName = useAppSelector(state => getShortPlayerName(state, runnerId));\n\n  const formattedOptions = useMemo(\n    () =>\n      options.map(option => ({\n        label: getRunnerOptionLabel(option),\n        value: option.id,\n        negative: option.attemptedAdvance && !option.successfulAdvance,\n      })),\n    [options]\n  );\n\n  const trailingRunnerOptions = useMemo(\n    () => selectedOption && getTrailingRunnerOptions?.(selectedOption),\n    [selectedOption, getTrailingRunnerOptions]\n  );\n\n  const handleChange = useCallback(\n    (value: number) =>\n      dispatch(promptActions.setRunnerChoice({ runnerId, option: options[value] })),\n    [dispatch, runnerId, options]\n  );\n\n  return (\n    <Box gap=\"small\">\n      <Box direction=\"row\" gap=\"small\">\n        <Text alignSelf=\"center\" style={{ whiteSpace: 'nowrap' }}>\n          {runnerName}\n        </Text>\n        <OptionSelector\n          flex\n          options={formattedOptions}\n          value={selectedOption?.id}\n          onChange={handleChange}\n        />\n      </Box>\n      {trailingRunnerOptions && <RunnerPrompt {...trailingRunnerOptions} />}\n    </Box>\n  );\n};\n\nexport default RunnerPrompt;\n","import React, { FC, useMemo, useEffect } from 'react';\nimport { Box } from 'grommet';\n\nimport PromptAccordion, { PromptAccordionPanel } from './PromptAccordion';\nimport PlateAppearancePreview from './PlateAppearancePreview';\nimport ContactPanel from './panels/ContactPanel';\nimport RunnerPrompt from './subprompts/RunnerPrompt';\n\nimport { getSelectedContactOption } from 'state/prompts/selectors';\nimport { useAppSelector } from 'utils/hooks';\n\nimport { HitOptions, BasePromptProps } from 'state/prompts/types';\n\nconst HitPrompt: FC<HitOptions & BasePromptProps> = ({\n  contactOptions,\n  runnerOptions,\n  getNextOptions,\n  setCanSubmit,\n}) => {\n  useEffect(() => setCanSubmit(true), [setCanSubmit]);\n\n  const selectedContactType = useAppSelector(getSelectedContactOption);\n\n  const fielderOptions = useMemo(\n    () => selectedContactType && getNextOptions(selectedContactType.contactType),\n    [selectedContactType, getNextOptions]\n  );\n\n  return (\n    <Box gap=\"medium\">\n      <PromptAccordion>\n        <ContactPanel contactOptions={contactOptions} fielderOptions={fielderOptions} />\n        {runnerOptions && (\n          <PromptAccordionPanel label=\"Runners\" preview=\"\">\n            <RunnerPrompt {...runnerOptions} />\n          </PromptAccordionPanel>\n        )}\n      </PromptAccordion>\n      <PlateAppearancePreview />\n    </Box>\n  );\n};\n\nexport default HitPrompt;\n","import React, { FC, useMemo, useEffect } from 'react';\nimport { Box } from 'grommet';\n\nimport PromptAccordion, { PromptAccordionPanel } from './PromptAccordion';\nimport PlateAppearancePreview from './PlateAppearancePreview';\nimport RunnerPrompt from './subprompts/RunnerPrompt';\nimport ContactPanel from './panels/ContactPanel';\n\nimport { useAppSelector } from 'utils/hooks';\nimport { getSelectedContactOption } from 'state/prompts/selectors';\n\nimport { OutOptions, BasePromptProps } from 'state/prompts/types';\n\nconst OutPrompt: FC<OutOptions & BasePromptProps> = ({\n  contactOptions,\n  getNextOptions,\n  setCanSubmit,\n}) => {\n  const selectedContactType = useAppSelector(getSelectedContactOption);\n\n  useEffect(() => setCanSubmit(!!selectedContactType), [selectedContactType, setCanSubmit]);\n\n  const { fielderOptions, runnerOptions } = useMemo(\n    () => (selectedContactType && getNextOptions(selectedContactType.contactType)) ?? {},\n    [selectedContactType, getNextOptions]\n  );\n\n  return (\n    <Box gap=\"medium\">\n      <PromptAccordion>\n        <ContactPanel contactOptions={contactOptions} fielderOptions={fielderOptions} />\n        {runnerOptions && (\n          <PromptAccordionPanel label=\"Runners\" preview=\"\">\n            <RunnerPrompt {...runnerOptions} />\n          </PromptAccordionPanel>\n        )}\n      </PromptAccordion>\n      {!!selectedContactType && <PlateAppearancePreview />}\n    </Box>\n  );\n};\n\nexport default OutPrompt;\n","import React, { FC, useMemo, useCallback, useEffect } from 'react';\nimport { Box, Heading } from 'grommet';\n\nimport FielderPrompt from './subprompts/FielderPrompt';\nimport OptionSelector from './OptionSelector';\nimport RunnerPrompt from './subprompts/RunnerPrompt';\n\nimport { getSelectedSacFlyRunsScored } from 'state/prompts/selectors';\nimport { promptActions } from 'state/prompts/slice';\nimport { useAppSelector, useAppDispatch } from 'utils/hooks';\n\nimport { SacrificeFlyOptions, BasePromptProps } from 'state/prompts/types';\nimport PlateAppearancePreview from './PlateAppearancePreview';\n\nconst SacrificeFlyPrompt: FC<SacrificeFlyOptions & BasePromptProps> = ({\n  fielderOptions,\n  runnersScoredOptions,\n  getNextOptions,\n  setCanSubmit,\n}) => {\n  const dispatch = useAppDispatch();\n\n  const selectedRunsScored = useAppSelector(getSelectedSacFlyRunsScored);\n\n  useEffect(() => setCanSubmit(true), [setCanSubmit]);\n\n  const runnerOptions = useMemo(() => getNextOptions?.(selectedRunsScored), [\n    getNextOptions,\n    selectedRunsScored,\n  ]);\n\n  const handleChangeRunsScored = useCallback(\n    (value: number) => {\n      dispatch(promptActions.setSacFlyRunsScoredChoice(value));\n    },\n    [dispatch]\n  );\n\n  return (\n    <Box gap=\"medium\" margin={{ top: 'medium' }}>\n      <Box direction=\"row\" gap=\"small\">\n        {runnersScoredOptions && (\n          <Box gap=\"xsmall\" flex>\n            <Heading level={4} margin=\"none\" alignSelf=\"center\">\n              Runs batted in\n            </Heading>\n            <OptionSelector\n              options={runnersScoredOptions}\n              value={selectedRunsScored}\n              onChange={handleChangeRunsScored}\n            />\n          </Box>\n        )}\n        {fielderOptions && <FielderPrompt {...fielderOptions} />}\n      </Box>\n      {runnerOptions && <RunnerPrompt {...runnerOptions} />}\n      <PlateAppearancePreview />\n    </Box>\n  );\n};\n\nexport default SacrificeFlyPrompt;\n","import React, { FC, useCallback, useEffect } from 'react';\nimport { Box, Heading } from 'grommet';\nimport _ from 'lodash';\n\nimport OptionSelector from '../OptionSelector';\n\nimport { getSelectedOutOnPlayOptions } from 'state/prompts/selectors';\nimport { promptActions } from 'state/prompts/slice';\nimport { getPlayerOptionsForSelector } from 'state/players/selectors';\nimport { useAppSelector, useAppDispatch } from 'utils/hooks';\n\nimport { OutOnPlayOptions } from 'state/prompts/types';\n\nexport const shouldShowOOPPrompt = ({ multiple, runnerIds }: OutOnPlayOptions) =>\n  multiple ? runnerIds.length > 2 : runnerIds.length > 1;\n\nconst OutOnPlayPrompt: FC<OutOnPlayOptions & { showTitle?: boolean }> = ({\n  showTitle = true,\n  ...options\n}) => {\n  const { multiple, runnerIds } = options;\n\n  const dispatch = useAppDispatch();\n\n  const dontShow = !shouldShowOOPPrompt(options);\n\n  useEffect(() => {\n    if (dontShow) {\n      if (multiple) {\n        dispatch(promptActions.setOutOnPlayChoices(runnerIds));\n      } else {\n        dispatch(promptActions.setOutOnPlayChoices([runnerIds[0]]));\n      }\n    }\n  }, [multiple, dontShow, runnerIds, dispatch]);\n\n  const selectedOptions = useAppSelector(getSelectedOutOnPlayOptions);\n\n  const handleChangeSingle = useCallback(\n    (value: string) => {\n      dispatch(promptActions.setOutOnPlayChoices([value]));\n    },\n    [dispatch]\n  );\n\n  const handleChangeMultiple = useCallback(\n    (value: string[]) => {\n      dispatch(promptActions.setOutOnPlayChoices(value.length > 2 ? _.slice(value, 1) : value));\n    },\n    [dispatch]\n  );\n\n  const runnerOptions = useAppSelector(state => getPlayerOptionsForSelector(state, runnerIds));\n\n  if (dontShow) return null;\n\n  let selector;\n  if (multiple) {\n    selector = (\n      <OptionSelector<string>\n        multiple\n        options={runnerOptions}\n        value={selectedOptions}\n        onChange={handleChangeMultiple}\n      />\n    );\n  } else {\n    selector = (\n      <OptionSelector\n        options={runnerOptions}\n        value={selectedOptions[0]}\n        onChange={handleChangeSingle}\n      />\n    );\n  }\n  return (\n    <Box>\n      {showTitle && (\n        <Heading level={4} margin={{ top: 'none', bottom: 'xsmall' }} alignSelf=\"center\">\n          {multiple ? 'Runners' : 'Runner'} out on play\n        </Heading>\n      )}\n      {selector}\n    </Box>\n  );\n};\n\nexport default OutOnPlayPrompt;\n","import React, { FC, useMemo, useEffect } from 'react';\nimport { Box } from 'grommet';\n\nimport PlateAppearancePreview from './PlateAppearancePreview';\nimport FielderPrompt from './subprompts/FielderPrompt';\nimport RunnerPrompt from './subprompts/RunnerPrompt';\nimport OutOnPlayPrompt from './subprompts/OutOnPlayPrompt';\n\nimport { getSelectedOutOnPlayOptions } from 'state/prompts/selectors';\nimport { useAppSelector } from 'utils/hooks';\n\nimport { FieldersChoiceOptions, BasePromptProps } from 'state/prompts/types';\n\nconst FieldersChoicePrompt: FC<FieldersChoiceOptions & BasePromptProps> = ({\n  fielderOptions,\n  outOnPlayOptions,\n  getNextOptions,\n  setCanSubmit,\n}) => {\n  const [selectedOutOnPlay] = useAppSelector(getSelectedOutOnPlayOptions);\n\n  const canSubmit = outOnPlayOptions.runnerIds.length > 1 ? !!selectedOutOnPlay : true;\n\n  useEffect(() => setCanSubmit(canSubmit), [canSubmit, setCanSubmit]);\n\n  const runnerOptions = useMemo(() => selectedOutOnPlay && getNextOptions?.(selectedOutOnPlay), [\n    getNextOptions,\n    selectedOutOnPlay,\n  ]);\n\n  return (\n    <Box gap=\"medium\" margin={{ top: 'small' }}>\n      <Box direction=\"row\" gap=\"small\" align=\"center\">\n        <FielderPrompt {...fielderOptions} />\n        <OutOnPlayPrompt {...outOnPlayOptions} />\n      </Box>\n      {runnerOptions && <RunnerPrompt {...runnerOptions} />}\n      {canSubmit && <PlateAppearancePreview />}\n    </Box>\n  );\n};\n\nexport default FieldersChoicePrompt;\n","import React, { FC, useMemo, useEffect } from 'react';\nimport { Box } from 'grommet';\n\nimport PromptAccordion, { PromptAccordionPanel } from './PromptAccordion';\nimport PlateAppearancePreview from './PlateAppearancePreview';\nimport ContactPanel from './panels/ContactPanel';\nimport RunnerPrompt from './subprompts/RunnerPrompt';\nimport OutOnPlayPrompt, { shouldShowOOPPrompt } from './subprompts/OutOnPlayPrompt';\n\nimport { getSelectedOutOnPlayOptions, getSelectedContactOption } from 'state/prompts/selectors';\nimport { useAppSelector } from 'utils/hooks';\n\nimport { DoublePlayOptions, BasePromptProps } from 'state/prompts/types';\n\nconst DoublePlayPrompt: FC<DoublePlayOptions & BasePromptProps> = ({\n  contactOptions,\n  getNextOptions,\n  setCanSubmit,\n}) => {\n  const selectedContactType = useAppSelector(getSelectedContactOption);\n  const selectedOutsOnPlay = useAppSelector(getSelectedOutOnPlayOptions);\n\n  const nextOptions = useMemo(\n    () => selectedContactType && getNextOptions(selectedContactType.contactType),\n    [getNextOptions, selectedContactType]\n  );\n\n  const outsOnPlayFulfilled =\n    !!nextOptions &&\n    (!nextOptions.outOnPlayOptions ||\n      selectedOutsOnPlay.length === (nextOptions.outOnPlayOptions.multiple ? 2 : 1));\n  const canSubmit = !!selectedContactType && outsOnPlayFulfilled;\n\n  useEffect(() => setCanSubmit(canSubmit), [canSubmit, setCanSubmit]);\n\n  const runnerOptions = useMemo(\n    () =>\n      nextOptions &&\n      !!selectedOutsOnPlay.length &&\n      nextOptions.getNextOptions?.(selectedOutsOnPlay),\n    [nextOptions, selectedOutsOnPlay]\n  );\n\n  return (\n    <Box gap=\"medium\">\n      <PromptAccordion>\n        <ContactPanel\n          contactOptions={contactOptions}\n          fielderOptions={nextOptions?.fielderOptions}\n        />\n        {nextOptions?.outOnPlayOptions &&\n          (shouldShowOOPPrompt(nextOptions.outOnPlayOptions) ? (\n            <PromptAccordionPanel\n              label={`Runner${nextOptions.outOnPlayOptions.multiple ? 's' : ''} out on play`}\n              preview=\"\"\n            >\n              <OutOnPlayPrompt {...nextOptions.outOnPlayOptions} showTitle={false} />\n            </PromptAccordionPanel>\n          ) : (\n            <OutOnPlayPrompt {...nextOptions.outOnPlayOptions} />\n          ))}\n        {runnerOptions && (\n          <PromptAccordionPanel label=\"Runners\" preview=\"\">\n            <RunnerPrompt {...runnerOptions} />\n          </PromptAccordionPanel>\n        )}\n      </PromptAccordion>\n      {canSubmit && <PlateAppearancePreview />}\n    </Box>\n  );\n};\n\nexport default DoublePlayPrompt;\n","import React, { FC, useMemo, useEffect, ReactNode, useState, createContext } from 'react';\nimport { Layer, Box, Button, Heading } from 'grommet';\n\nimport HitPrompt from './HitPrompt';\nimport OutPrompt from './OutPrompt';\nimport SacrificeFlyPrompt from './SacrificeFlyPrompt';\nimport FieldersChoicePrompt from './FieldersChoicePrompt';\nimport DoublePlayPrompt from './DoublePlayPrompt';\n\nimport { createPlateAppearancePromptSelector, getBatterName } from 'state/game/selectors';\nimport { promptActions } from 'state/prompts/slice';\nimport { useAppSelector, useAppDispatch } from 'utils/hooks';\nimport { getPlateAppearanceLabel } from 'utils/labels';\n\nimport { PlateAppearanceType } from 'state/game/types';\n\ninterface Props {\n  paType: PlateAppearanceType;\n  onSubmit: () => void;\n  onCancel: () => void;\n}\n\nexport const promptContext = createContext(PlateAppearanceType.OUT);\n\nconst EventDetailPrompt: FC<Props> = ({ paType, onSubmit, onCancel }) => {\n  const dispatch = useAppDispatch();\n\n  const [canSubmit, setCanSubmit] = useState(false);\n\n  const promptSelector = useMemo(() => createPlateAppearancePromptSelector(paType), [paType]);\n  const prompt = useAppSelector(promptSelector);\n  const batter = useAppSelector(getBatterName);\n\n  useEffect(() => () => void dispatch(promptActions.clearPrompt()), [dispatch]);\n\n  useEffect(() => {\n    if (!prompt) {\n      onSubmit();\n    }\n  }, [prompt, onSubmit]);\n\n  if (!prompt) return null;\n\n  let promptView: ReactNode;\n  switch (prompt.kind) {\n    case 'hit':\n      promptView = <HitPrompt {...prompt} setCanSubmit={setCanSubmit} />;\n      break;\n    case 'out':\n      promptView = <OutPrompt {...prompt} setCanSubmit={setCanSubmit} />;\n      break;\n    case 'sacrificeFly':\n      promptView = <SacrificeFlyPrompt {...prompt} setCanSubmit={setCanSubmit} />;\n      break;\n    case 'fieldersChoice':\n      promptView = <FieldersChoicePrompt {...prompt} setCanSubmit={setCanSubmit} />;\n      break;\n    case 'doublePlay':\n      promptView = <DoublePlayPrompt {...prompt} setCanSubmit={setCanSubmit} />;\n      break;\n  }\n\n  return (\n    <Layer responsive={false}>\n      <Box pad=\"medium\">\n        <Heading level={3} margin=\"none\" alignSelf=\"center\">\n          {getPlateAppearanceLabel(paType)} by {batter}\n        </Heading>\n        <promptContext.Provider value={paType}>{promptView}</promptContext.Provider>\n        <Box direction=\"row\" margin={{ top: 'medium' }} justify=\"between\" gap=\"small\">\n          <Button color=\"status-critical\" label=\"Cancel\" onClick={onCancel} />\n          {canSubmit && (\n            <Button\n              color=\"status-ok\"\n              label={`Record ${getPlateAppearanceLabel(paType)}`}\n              onClick={onSubmit}\n            />\n          )}\n        </Box>\n      </Box>\n    </Layer>\n  );\n};\n\nexport default EventDetailPrompt;\n","import React, { useCallback, useState } from 'react';\nimport { Box, Button } from 'grommet';\n\nimport EventDetailPrompt from './prompts/EventDetailPrompt';\n\nimport { getPlateAppearanceOptions } from 'state/game/selectors';\nimport { gameActions } from 'state/game/slice';\nimport { getPlateAppearanceResult } from 'state/prompts/selectors';\nimport { useAppDispatch, useAppSelector } from 'utils/hooks';\nimport { getPlateAppearanceLabel } from 'utils/labels';\n\nimport { PlateAppearanceType } from 'state/game/types';\n\nconst buttonGroups = [\n  {\n    color: 'neutral-4',\n    types: [\n      PlateAppearanceType.OUT,\n      PlateAppearanceType.FIELDERS_CHOICE,\n      PlateAppearanceType.DOUBLE_PLAY,\n    ],\n  },\n  {\n    color: 'neutral-3',\n    types: [\n      PlateAppearanceType.SINGLE,\n      PlateAppearanceType.DOUBLE,\n      PlateAppearanceType.TRIPLE,\n      PlateAppearanceType.HOMERUN,\n    ],\n  },\n  {\n    color: 'neutral-1',\n    types: [PlateAppearanceType.WALK, PlateAppearanceType.SACRIFICE_FLY],\n  },\n];\n\nconst EventReporter = () => {\n  const dispatch = useAppDispatch();\n\n  const options = useAppSelector(getPlateAppearanceOptions);\n\n  const [pendingPlateAppearance, setPendingPlateAppearance] = useState<PlateAppearanceType>();\n\n  const handleSubmitPlateAppearance = useCallback(() => {\n    if (pendingPlateAppearance) {\n      dispatch((dispatch, getState) => {\n        dispatch(\n          gameActions.recordGameEvent(getPlateAppearanceResult(getState(), pendingPlateAppearance))\n        );\n      });\n    }\n    setPendingPlateAppearance(undefined);\n  }, [dispatch, pendingPlateAppearance, setPendingPlateAppearance]);\n\n  const handleCancelPrompt = useCallback(() => {\n    setPendingPlateAppearance(undefined);\n  }, [setPendingPlateAppearance]);\n\n  return (\n    <Box gridArea=\"reporter\" align=\"center\" justify=\"center\">\n      {buttonGroups.map(({ color, types }) => (\n        <Box direction=\"row\" align=\"center\" justify=\"center\" alignContent=\"center\" wrap>\n          {types\n            .filter(paType => options.includes(paType))\n            .map(paType => (\n              <Button\n                key={paType}\n                color={color}\n                label={getPlateAppearanceLabel(paType)}\n                onClick={() => setPendingPlateAppearance(paType)}\n                margin=\"small\"\n              />\n            ))}\n        </Box>\n      ))}\n      {pendingPlateAppearance && (\n        <EventDetailPrompt\n          paType={pendingPlateAppearance}\n          onSubmit={handleSubmitPlateAppearance}\n          onCancel={handleCancelPrompt}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default EventReporter;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24 45.21L2.79 24L24 2.79L45.21 24L24 45.21Z\",\n  id: \"b1pwy3kSYG\"\n}), /*#__PURE__*/React.createElement(\"clipPath\", {\n  id: \"clipa1ontZhQmS\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#b1pwy3kSYG\",\n  opacity: 1\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#b1pwy3kSYG\",\n  opacity: 1,\n  fill: \"#d4ee91\",\n  fillOpacity: 0\n}), /*#__PURE__*/React.createElement(\"g\", {\n  clipPath: \"url(#clipa1ontZhQmS)\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#b1pwy3kSYG\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeOpacity: 1\n})))));\n\nfunction SvgBase(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 48 48\",\n    width: 24,\n    height: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBase);\nexport default __webpack_public_path__ + \"static/media/base.354fa048.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 24L24 41L41 24L41 7L7 7L7 24Z\",\n  id: \"a3jEO7oPWR\"\n}), /*#__PURE__*/React.createElement(\"clipPath\", {\n  id: \"clipb1aIxcMs8Z\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#a3jEO7oPWR\",\n  opacity: 1\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", {\n  clipPath: \"url(#clipb1aIxcMs8Z)\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#a3jEO7oPWR\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 2,\n  strokeOpacity: 1\n})))));\n\nfunction SvgHome(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"0 0 48 48\",\n    width: 24,\n    height: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHome);\nexport default __webpack_public_path__ + \"static/media/home.ece0d570.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from 'react';\nimport { Text, Box } from 'grommet';\n\nimport { getPlateAppearanceLabel } from 'utils/labels';\n\nimport { PlateAppearanceType } from 'state/game/types';\nimport { PlayDescription } from 'state/plays/types';\n\nconst PlayTypeTag: FC<{ type: PlateAppearanceType }> = ({ type }) => {\n  let background = '';\n  switch (type) {\n    case PlateAppearanceType.WALK:\n      background = 'neutral-1';\n      break;\n    case PlateAppearanceType.OUT:\n    case PlateAppearanceType.FIELDERS_CHOICE:\n    case PlateAppearanceType.DOUBLE_PLAY:\n      background = 'neutral-4';\n      break;\n    default:\n      background = 'neutral-3';\n      break;\n  }\n  return (\n    <Box\n      round={{ size: '2px' }}\n      background={background}\n      alignSelf=\"center\"\n      pad={{ vertical: 'xxsmall', horizontal: 'xsmall' }}\n      flex={false}\n    >\n      <Text size=\"xsmall\">{getPlateAppearanceLabel(type).toUpperCase()}</Text>\n    </Box>\n  );\n};\n\nconst ScoreTag: FC<{ score: [number, number] }> = ({ score: [away, home] }) => (\n  <Box\n    round={{ size: '2px' }}\n    border\n    alignSelf=\"start\"\n    pad={{ vertical: 'xxsmall', horizontal: 'xsmall' }}\n    flex={false}\n    margin={{ top: 'xsmall' }}\n  >\n    <Text size=\"xsmall\">\n      AWAY {away} - HOME {home}\n    </Text>\n  </Box>\n);\n\nconst Play: FC<PlayDescription> = ({ description, outs, score, type }) => (\n  <Box pad={{ vertical: 'small' }} direction=\"row\" justify=\"between\" gap=\"xsmall\">\n    <Box>\n      <Text>\n        <Text>{description}</Text>\n        {outs && (\n          <Text weight=\"bold\" margin={{ left: 'xsmall' }}>\n            {outs} {outs > 1 ? 'outs' : 'out'}{' '}\n          </Text>\n        )}\n      </Text>\n      {score && <ScoreTag score={score} />}\n    </Box>\n    {type && <PlayTypeTag type={type} />}\n  </Box>\n);\n\nexport default Play;\n","import _ from 'lodash';\n\nimport { getNewBase, getBaseForRunner, forEachRunner } from 'state/game/utils';\nimport { formatShortBaseName, getHitLabelFromContact } from 'utils/labels';\n\nimport {\n  PlateAppearanceType,\n  FieldingPosition,\n  ContactType,\n  HitContactType,\n  RecordedPlay,\n  BaseType,\n  HitType,\n} from 'state/game/types';\nimport { RawPlayDescription } from './types';\n\nconst getPositionTitle = (position: FieldingPosition) =>\n  ({\n    [FieldingPosition.PITCHER]: 'pitcher',\n    [FieldingPosition.CATCHER]: 'catcher',\n    [FieldingPosition.FIRST_BASE]: 'first baseman',\n    [FieldingPosition.SECOND_BASE]: 'second baseman',\n    [FieldingPosition.THIRD_BASE]: 'third baseman',\n    [FieldingPosition.SHORTSTOP]: 'shortstop',\n    [FieldingPosition.LEFT_FIELD]: 'left fielder',\n    [FieldingPosition.CENTER_FIELD]: 'center fielder',\n    [FieldingPosition.LEFT_CENTER]: 'left center fielder',\n    [FieldingPosition.RIGHT_CENTER]: 'right center fielder',\n    [FieldingPosition.RIGHT_FIELD]: 'right fielder',\n  }[position]);\n\nconst getContactVerb = (contactType: ContactType) =>\n  ({\n    [ContactType.NONE]: 'strikes',\n    [ContactType.GROUNDER]: 'grounds',\n    [ContactType.LAZY_FLY]: 'flies',\n    [ContactType.LINE_DRIVE]: 'lines',\n    [ContactType.LONG_FLY]: 'flies',\n    [ContactType.POPUP]: 'pops',\n  }[contactType]);\n\nconst getHitVerb = (hitType: HitType) =>\n  ({\n    [PlateAppearanceType.SINGLE]: 'singles',\n    [PlateAppearanceType.DOUBLE]: 'doubles',\n    [PlateAppearanceType.TRIPLE]: 'triples',\n    [PlateAppearanceType.HOMERUN]: 'homers',\n  }[hitType]);\n\nconst formatBaseName = (base: BaseType | null) => {\n  if (base === null) return 'home';\n  return {\n    [BaseType.FIRST]: '1st base',\n    [BaseType.SECOND]: '2nd base',\n    [BaseType.THIRD]: '3rd base',\n  }[base];\n};\n\nconst makeOutPhrase = (runnerId: string, base: BaseType | null) =>\n  `{${runnerId}} out at ${formatShortBaseName(base)}.`;\n\nexport const getPlayDescription = ({\n  gameState,\n  event,\n  runnersScored,\n  runnersAfter,\n  scoreAfter,\n}: RecordedPlay): RawPlayDescription => {\n  const sentences: string[] = [];\n  const playerIds: string[] = [];\n  let position: FieldingPosition | undefined;\n  let newNumOuts: number | undefined;\n  let newScore: [number, number] | undefined;\n\n  const finishSentence = (parts: string[]) => {\n    sentences.push([...parts, '.'].join(''));\n  };\n\n  if (event.kind === 'stolenBaseAttempt') {\n    const endBase = getNewBase(getBaseForRunner(gameState.runners, event.runnerId));\n    if (event.success) {\n      sentences.push(`{${event.runnerId}} steals ${formatBaseName(endBase)}.`);\n    } else {\n      sentences.push(`{${event.runnerId}} is caught stealing ${formatBaseName(endBase)}.`);\n      newNumOuts = gameState.outs + 1;\n    }\n    playerIds.push(event.runnerId);\n  } else {\n    const { atBat, runners, outs } = gameState;\n    const { fieldedBy, contactType, runnersOutOnPlay, basesTaken, outsOnBasepaths } = event;\n    playerIds.push(atBat);\n    const fielderToken = fieldedBy && `${getPositionTitle(fieldedBy)} {${fieldedBy}}`;\n\n    switch (event.type) {\n      case PlateAppearanceType.WALK:\n        sentences.push(`{${atBat}} walks.`);\n        break;\n      case PlateAppearanceType.FIELDERS_CHOICE: {\n        const parts = [`{${atBat}} hits into a fielder's choice`];\n        if (fielderToken) {\n          parts.push(`, fielded by ${fielderToken}`);\n          position = event.fieldedBy;\n        }\n        finishSentence(parts);\n        sentences.push(\n          makeOutPhrase(\n            runnersOutOnPlay[0],\n            getNewBase(getBaseForRunner(runners, runnersOutOnPlay[0]))\n          )\n        );\n        playerIds.push(runnersOutOnPlay[0]);\n        newNumOuts = outs + 1;\n        break;\n      }\n      case PlateAppearanceType.SACRIFICE_FLY: {\n        const parts = [`{${atBat}} out on a sacrifice fly`];\n        if (fielderToken) {\n          parts.push(` to ${fielderToken}`);\n          position = fieldedBy;\n        }\n        finishSentence(parts);\n        newNumOuts = outs + 1;\n        break;\n      }\n      case PlateAppearanceType.DOUBLE_PLAY:\n        sentences.push(`{${atBat}} ${getContactVerb(contactType!)} into a double play.`);\n        runnersOutOnPlay.forEach(runnerId => {\n          let outBase: BaseType | null;\n          if (runnerId === atBat) {\n            outBase = BaseType.FIRST;\n          } else {\n            const startBase = getBaseForRunner(runners, runnerId);\n            outBase = contactType === ContactType.GROUNDER ? getNewBase(startBase) : startBase;\n          }\n          if (contactType === ContactType.GROUNDER || runnerId !== atBat) {\n            sentences.push(makeOutPhrase(runnerId, outBase));\n            playerIds.push(runnerId);\n          }\n        });\n        newNumOuts = outs + 2;\n        break;\n      case PlateAppearanceType.OUT: {\n        const parts = [`{${atBat}} ${getContactVerb(contactType!)} out`];\n        if (contactType !== ContactType.NONE && fielderToken) {\n          parts.push(` to ${fielderToken}`);\n          position = fieldedBy;\n        }\n        finishSentence(parts);\n        newNumOuts = outs + 1;\n        break;\n      }\n      case PlateAppearanceType.HOMERUN:\n      case PlateAppearanceType.TRIPLE:\n      case PlateAppearanceType.DOUBLE:\n      case PlateAppearanceType.SINGLE: {\n        const parts: string[] = [];\n        if (event.type === PlateAppearanceType.HOMERUN && _.size(runners) === 3) {\n          parts.push(`{${atBat}} hits a grand slam`);\n        } else {\n          parts.push(`{${atBat}} ${getHitVerb(event.type)}`);\n        }\n        if (contactType) {\n          parts.push(\n            ` on a ${getHitLabelFromContact(contactType as HitContactType).toLowerCase()}`\n          );\n        }\n        if (fieldedBy) {\n          const token =\n            event.type === PlateAppearanceType.HOMERUN\n              ? getPositionTitle(fieldedBy).slice(0, -2)\n              : fielderToken;\n          parts.push(` to ${token}`);\n          position = fieldedBy;\n        }\n        finishSentence(parts);\n        break;\n      }\n    }\n    if (runnersScored.length) {\n      runnersScored.forEach(runnerId => {\n        if (runnerId !== atBat) {\n          sentences.push(`{${runnerId}} scores.`);\n          playerIds.push(runnerId);\n        }\n      });\n      newScore = scoreAfter;\n    }\n    forEachRunner(runnersAfter, (runnerId, base) => {\n      if (runners[base] !== runnerId && runnerId !== atBat) {\n        sentences.push(`{${runnerId}} to ${formatShortBaseName(base)}.`);\n        playerIds.push(runnerId);\n      }\n    });\n    _.forEach(outsOnBasepaths, (base, runnerId) => {\n      sentences.push(`{${runnerId}} thrown out at ${formatShortBaseName(base)}.`);\n      playerIds.push(runnerId);\n      newNumOuts = (newNumOuts ?? outs) + 1;\n    });\n    if (atBat in basesTaken) {\n      sentences.push(`{${atBat}} to ${formatShortBaseName(basesTaken[atBat])} on the throw.`);\n    }\n  }\n\n  return {\n    description: sentences.join(' '),\n    playerIds,\n    position,\n    newNumOuts,\n    newScore,\n  };\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nimport {\n  getFuture,\n  getGameHistory,\n  getPlayerAtPositionFromTeams,\n  getTeams,\n} from 'state/game/selectors';\nimport { getPlayerGetter } from 'state/players/selectors';\nimport { formatShortName } from 'state/players/utils';\nimport { getPlayDescription } from './plays';\n\nimport { HalfInning, RecordedPlay, Team } from 'state/game/types';\nimport { Player } from 'state/players/types';\nimport { HalfInningPlaysGroup, PlayDescription } from './types';\n\nconst makeInterpolatedPlayDescription = (\n  play: RecordedPlay,\n  playerGetter: (playerId: string) => Player,\n  teams: [Team, Team]\n): PlayDescription => {\n  const { description, playerIds, position, newNumOuts, newScore } = getPlayDescription(play);\n  let interpolatedDescription = description;\n  if (position) {\n    interpolatedDescription = description.replace(\n      new RegExp(`{${position}}`),\n      formatShortName(\n        playerGetter(getPlayerAtPositionFromTeams(teams, 1 - play.gameState.halfInning, position))\n      )\n    );\n  }\n  playerIds.forEach(playerId => {\n    interpolatedDescription = interpolatedDescription.replace(\n      new RegExp(`{${playerId}}`, 'g'),\n      formatShortName(playerGetter(playerId))\n    );\n  });\n\n  return {\n    description: interpolatedDescription,\n    outs: newNumOuts,\n    score: newScore,\n    type: play.event.kind === 'plateAppearance' ? play.event.type : undefined,\n  };\n};\n\nexport const getAllPlays = createSelector(\n  getGameHistory,\n  getPlayerGetter,\n  getTeams,\n  (history, playerGetter, teams): HalfInningPlaysGroup[] => {\n    const groupedPlaysByInning = history.reduce((groupedPlays, play) => {\n      const { inning, halfInning } = play.gameState;\n      if (!groupedPlays.length) {\n        groupedPlays.push({ inning, halfInning, plays: [play] });\n      } else {\n        const lastGroup = _.last(groupedPlays)!;\n        if (lastGroup.inning !== inning || lastGroup.halfInning !== halfInning) {\n          groupedPlays.push({ inning, halfInning, plays: [play] });\n        } else {\n          lastGroup.plays.push(play);\n        }\n      }\n      return groupedPlays;\n    }, [] as { inning: number; halfInning: HalfInning; plays: RecordedPlay[] }[]);\n\n    return groupedPlaysByInning.map(({ inning, halfInning, plays }) => ({\n      inning,\n      halfInning,\n      plays: plays.map(play => makeInterpolatedPlayDescription(play, playerGetter, teams)),\n    }));\n  }\n);\n\nexport const getScoringPlays = createSelector(getAllPlays, groups =>\n  groups\n    .map(({ inning, halfInning, plays }) => ({\n      inning,\n      halfInning,\n      plays: plays.filter(play => !!play.score),\n    }))\n    .filter(group => group.plays.length)\n);\n\nexport const getLastPlay = createSelector(\n  getGameHistory,\n  getPlayerGetter,\n  getTeams,\n  (history, playerGetter, teams) => {\n    const lastPlay = _.last(history);\n    return lastPlay && makeInterpolatedPlayDescription(lastPlay, playerGetter, teams);\n  }\n);\n\nexport const getNextPlay = createSelector(getFuture, getPlayerGetter, (future, playerGetter) => {\n  const nextState = _.first(future);\n  const nextPlay = _.last(nextState?.gameHistory);\n  return nextPlay && makeInterpolatedPlayDescription(nextPlay, playerGetter, nextState!.teams);\n});\n","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { Card, Layer, ThemeContext } from 'grommet';\n\nimport Play from './plays/Play';\n\nimport { getLastPlay } from 'state/plays/selectors';\nimport { useAppSelector } from 'utils/hooks';\n\nconst PlayNotification: FC<{ target: HTMLElement }> = ({ target }) => {\n  const lastPlay = useAppSelector(getLastPlay);\n\n  const [showNotification, setShowNotification] = useState(false);\n  const timeoutId = useRef(-1);\n\n  useEffect(() => {\n    if (lastPlay) {\n      setShowNotification(true);\n      clearTimeout(timeoutId.current);\n      timeoutId.current = window.setTimeout(() => {\n        setShowNotification(false);\n      }, 5000);\n    }\n  }, [lastPlay, setShowNotification]);\n\n  return (\n    <>\n      {lastPlay && showNotification && (\n        <Layer\n          plain\n          position=\"bottom-left\"\n          modal={false}\n          target={target}\n          margin={{ left: 'medium', bottom: 'medium' }}\n        >\n          <ThemeContext.Extend value={{ global: { size: { medium: '324px' } } }}>\n            <Card background=\"light-1\" pad=\"small\" width=\"medium\">\n              <Play {...lastPlay!} />\n            </Card>\n          </ThemeContext.Extend>\n        </Layer>\n      )}\n    </>\n  );\n};\n\nexport default PlayNotification;\n","import React, { useCallback, useRef } from 'react';\nimport { Grid, Box, Text, Button } from 'grommet';\nimport { Blank, Redo, Undo } from 'grommet-icons';\nimport { Redirect } from 'react-router-dom';\nimport { ActionCreators } from 'redux-undo';\n\nimport EventReporter from './EventReporter';\n\nimport {\n  getRunnerNames,\n  getBatterName,\n  getOnDeckBatterName,\n  getInTheHoleBatterName,\n  isGameInProgress,\n  isUndoPossible,\n  isRedoPossible,\n} from 'state/game/selectors';\nimport { useAppDispatch, useAppSelector } from 'utils/hooks';\n\nimport { BaseType } from 'state/game/types';\n\nimport { ReactComponent as BaseIcon } from 'icons/base.svg';\nimport { ReactComponent as HomeIcon } from 'icons/home.svg';\nimport PlayNotification from './PlayNotification';\n\nconst Base = ({ occupied }: { occupied?: boolean }) => (\n  <Blank size=\"large\" color={occupied ? 'brand' : undefined} fillOpacity={occupied ? 1 : undefined}>\n    <BaseIcon />\n  </Blank>\n);\nconst HomePlate = () => (\n  <Blank size=\"large\">\n    <HomeIcon />\n  </Blank>\n);\n\nconst Bases = () => {\n  const dispatch = useAppDispatch();\n\n  const gameInProgress = useAppSelector(isGameInProgress);\n  const {\n    [BaseType.FIRST]: firstBaseRunner,\n    [BaseType.SECOND]: secondBaseRunner,\n    [BaseType.THIRD]: thirdBaseRunner,\n  } = useAppSelector(getRunnerNames);\n  const batter = useAppSelector(getBatterName);\n  const onDeck = useAppSelector(getOnDeckBatterName);\n  const inTheHole = useAppSelector(getInTheHoleBatterName);\n  const undoPossible = useAppSelector(isUndoPossible);\n  const redoPossible = useAppSelector(isRedoPossible);\n\n  const undo = useCallback(() => {\n    dispatch(ActionCreators.undo());\n  }, [dispatch]);\n\n  const redo = useCallback(() => {\n    dispatch(ActionCreators.redo());\n  }, [dispatch]);\n\n  const boxRef = useRef<HTMLDivElement | null>(null);\n\n  if (!gameInProgress) {\n    return <Redirect to=\"/teams\" />;\n  }\n\n  return (\n    <Box fill>\n      <Box flex ref={boxRef}>\n        <Grid\n          fill\n          rows={['xsmall', 'auto', 'xsmall']}\n          columns={['small', 'auto', 'small']}\n          areas={[\n            ['undo-redo', 'second-base', '.'],\n            ['third-base', 'reporter', 'first-base'],\n            ['.', 'home-plate', '.'],\n          ]}\n        >\n          <style scoped>{`\n          svg[fill-opacity=\"1\"] use {\n            fill-opacity: 1;\n          }\n        `}</style>\n          <Box gridArea=\"undo-redo\" direction=\"row\" margin=\"medium\" gap=\"small\">\n            <Button icon={<Undo />} disabled={!undoPossible} onClick={undo} />\n            <Button icon={<Redo />} disabled={!redoPossible} onClick={redo} />\n          </Box>\n          <Box gridArea=\"first-base\" direction=\"row\" justify=\"end\" align=\"center\">\n            <Text textAlign=\"center\">{firstBaseRunner}</Text>\n            <Base occupied={!!firstBaseRunner} />\n          </Box>\n          <Box gridArea=\"second-base\" align=\"center\">\n            <Base occupied={!!secondBaseRunner} />\n            <Text>{secondBaseRunner}</Text>\n          </Box>\n          <Box gridArea=\"third-base\" direction=\"row\" align=\"center\">\n            <Base occupied={!!thirdBaseRunner} />\n            <Text textAlign=\"center\">{thirdBaseRunner}</Text>\n          </Box>\n          <Box gridArea=\"home-plate\" justify=\"end\" align=\"center\">\n            <Text weight=\"bold\" size=\"xlarge\">\n              {batter}\n            </Text>\n            <HomePlate />\n          </Box>\n          <EventReporter />\n        </Grid>\n        {boxRef.current && <PlayNotification target={boxRef.current} />}\n      </Box>\n      <Box border={{ side: 'top' }} direction=\"row\" justify=\"around\" pad=\"medium\">\n        <Box direction=\"row\" gap=\"small\">\n          <Text>On Deck</Text>\n          <Text weight=\"bold\">{onDeck}</Text>\n        </Box>\n        <Box direction=\"row\" gap=\"small\">\n          <Text>In the Hole</Text>\n          <Text weight=\"bold\">{inTheHole}</Text>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Bases;\n","import React, { useCallback, FC, useMemo } from 'react';\nimport { Box, Text, Button, Select, ThemeContext } from 'grommet';\nimport { Close } from 'grommet-icons';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport { getAvailablePositions, getPlayerPosition } from 'state/game/selectors';\nimport { gameActions } from 'state/game/slice';\nimport { getPlayerName } from 'state/players/selectors';\nimport { useAppSelector, useAppDispatch } from 'utils/hooks';\nimport { getPositionAbbreviation } from 'utils/labels';\n\nimport { FieldingPosition, TeamRole } from 'state/game/types';\n\ninterface Props {\n  team: TeamRole;\n  playerId: string;\n  index: number;\n}\n\nconst LineupPlayer: FC<Props> = ({ playerId, index, team }) => {\n  const dispatch = useAppDispatch();\n\n  const name = useAppSelector(state => getPlayerName(state, playerId));\n  const position = useAppSelector(state => getPlayerPosition(state, playerId));\n\n  const availablePositions = useAppSelector(state => getAvailablePositions(state, team));\n  const positionOptions = useMemo(\n    () =>\n      availablePositions.map(position => ({\n        position,\n        label: getPositionAbbreviation(position),\n      })),\n    [availablePositions]\n  );\n\n  const handleRemove = useCallback(() => {\n    dispatch(gameActions.removePlayerFromGame(playerId));\n  }, [playerId, dispatch]);\n\n  const handleChangePosition = useCallback(\n    ({ value }: { value: FieldingPosition }) => {\n      dispatch(gameActions.changePlayerPosition({ playerId, position: value }));\n    },\n    [dispatch, playerId]\n  );\n\n  return (\n    <Draggable draggableId={playerId} index={index}>\n      {({ innerRef, draggableProps, dragHandleProps }) => (\n        <Box\n          ref={innerRef}\n          {...draggableProps}\n          {...dragHandleProps}\n          direction=\"row\"\n          height=\"xxsmall\"\n          align=\"center\"\n          justify=\"between\"\n        >\n          <Text margin={{ right: 'auto' }}>{name}</Text>\n          <ThemeContext.Extend value={{ global: { size: { xsmall: '108px' } } }}>\n            <Box width=\"xsmall\" margin={{ right: 'small' }}>\n              <Select\n                value={position}\n                options={positionOptions}\n                labelKey=\"label\"\n                valueKey={{ key: 'position', reduce: true }}\n                onChange={handleChangePosition}\n              />\n            </Box>\n          </ThemeContext.Extend>\n          <Button\n            plain={false}\n            icon={<Close size=\"small\" color=\"status-critical\" />}\n            color=\"status-critical\"\n            onClick={handleRemove}\n          />\n        </Box>\n      )}\n    </Draggable>\n  );\n};\n\nexport default LineupPlayer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport { Player, NewPlayer, NewPlayerWithId, PlayerStats } from './types';\n\nconst initialStats: PlayerStats = {\n  atBats: 0,\n  hits: 0,\n  doubles: 0,\n  triples: 0,\n  homeRuns: 0,\n  walks: 0,\n  stolenBases: 0,\n  caughtStealing: 0,\n  runsBattedIn: 0,\n  runsScored: 0,\n  strikeouts: 0,\n  sacrificeFlies: 0,\n  groundIntoDoublePlays: 0,\n  leftOnBase: 0,\n};\n\nconst doesPlayerExist = (newPlayer: NewPlayer, players: Record<string, Player>) =>\n  _.some(\n    players,\n    player => player.firstName === newPlayer.firstName && player.lastName === newPlayer.lastName\n  );\n\nconst { actions, reducer } = createSlice({\n  name: 'players',\n  initialState: {} as Record<string, Player>,\n  reducers: {\n    addPlayer: {\n      reducer(state, { payload }: PayloadAction<NewPlayerWithId>) {\n        if (!doesPlayerExist(payload, state)) {\n          state[payload.playerId] = { ...payload, games: 0, stats: initialStats };\n        }\n      },\n      prepare: (player: NewPlayer) => ({ payload: { ...player, playerId: uuidv1() } }),\n    },\n  },\n});\n\nexport const { addPlayer } = actions;\nexport default reducer;\n","import React, { useState, useMemo, useCallback, ChangeEvent } from 'react';\nimport { Box, Text, TextInput, TextInputProps, Heading } from 'grommet';\nimport _ from 'lodash';\nimport { Droppable } from 'react-beautiful-dnd';\n\nimport LineupPlayer from './LineupPlayer';\n\nimport { getLineup, getPlayersNotInGame } from 'state/game/selectors';\nimport { gameActions } from 'state/game/slice';\nimport { TeamRole } from 'state/game/types';\nimport { getNameParts } from 'state/players/utils';\nimport { useAppSelector, useAppDispatch } from 'utils/hooks';\nimport { addPlayer } from 'state/players/slice';\n\nconst NEW_PLAYER_ID = 'new-player';\n\nconst Lineup = ({ team }: { team: TeamRole }) => {\n  const dispatch = useAppDispatch();\n\n  const players = useAppSelector(state => getLineup(state, team));\n  const availablePlayers = useAppSelector(getPlayersNotInGame);\n\n  const [searchValue, setSearchValue] = useState('');\n\n  const suggestions = useMemo(() => {\n    if (!searchValue.length) return [];\n\n    const existingSuggestions = availablePlayers\n      .filter(({ firstName }) => firstName.toLowerCase().startsWith(searchValue.toLowerCase()))\n      .map(player => ({\n        value: player.playerId,\n        label: (\n          <Box pad=\"small\">\n            <Text>\n              {player.firstName} {player.lastName}\n            </Text>\n          </Box>\n        ),\n      }));\n\n    if (searchValue.length > 2) {\n      return existingSuggestions.concat({\n        label: (\n          <Box border={{ color: 'status-ok', size: '2px' }} pad=\"small\">\n            <Text>Add new player \"{searchValue}\"</Text>\n          </Box>\n        ),\n        value: NEW_PLAYER_ID,\n      });\n    }\n    return existingSuggestions;\n  }, [availablePlayers, searchValue]);\n\n  const handleSearchChange = useCallback(\n    ({ currentTarget }: ChangeEvent<HTMLInputElement>) => setSearchValue(currentTarget.value),\n    [setSearchValue]\n  );\n\n  const handleSuggestionSelect: NonNullable<TextInputProps['onSelect']> = useCallback(\n    ({ suggestion }) => {\n      if (suggestion) {\n        let playerId = suggestion.value;\n        if (playerId === NEW_PLAYER_ID) {\n          const { payload } = dispatch(addPlayer(getNameParts(searchValue)));\n          playerId = payload.playerId;\n        }\n        dispatch(gameActions.addPlayerToGame({ team, playerId }));\n        setSearchValue('');\n      }\n    },\n    [team, dispatch, searchValue, setSearchValue]\n  );\n\n  return (\n    <Box flex>\n      <Heading level={4} textAlign=\"center\" margin={{ top: 'none' }}>\n        {team === TeamRole.AWAY ? 'Away Team' : 'Home Team'}\n      </Heading>\n      <TextInput\n        placeholder=\"Add Player\"\n        suggestions={suggestions}\n        value={searchValue}\n        onChange={handleSearchChange}\n        onSelect={handleSuggestionSelect}\n      />\n      <Box direction=\"row\" margin={{ top: 'small' }}>\n        <Box width=\"xxsmall\">\n          {_.range(1, Math.max(9, players.length) + 1).map(lineupSpot => (\n            <Box key={lineupSpot} height=\"xxsmall\" justify=\"center\">\n              <Text>{lineupSpot}</Text>\n            </Box>\n          ))}\n        </Box>\n        <Droppable droppableId={team === TeamRole.AWAY ? 'AWAY' : 'HOME'}>\n          {({ innerRef, droppableProps, placeholder }) => (\n            <Box ref={innerRef} {...droppableProps} flex>\n              {players.map((playerId, index) => (\n                <LineupPlayer key={playerId} playerId={playerId} index={index} team={team} />\n              ))}\n              {placeholder}\n            </Box>\n          )}\n        </Droppable>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Lineup;\n","import React, { useCallback } from 'react';\nimport { Box } from 'grommet';\nimport { DragDropContext, DragDropContextProps } from 'react-beautiful-dnd';\n\nimport Lineup from './Lineup';\n\nimport { gameActions } from 'state/game/slice';\nimport { TeamRole } from 'state/game/types';\nimport { useAppDispatch } from 'utils/hooks';\n\nconst Teams = () => {\n  const dispatch = useAppDispatch();\n\n  const handleDragEnd: DragDropContextProps['onDragEnd'] = useCallback(\n    ({ source, destination }) => {\n      if (!destination) return;\n      dispatch(\n        gameActions.movePlayer({\n          fromTeam: TeamRole[source.droppableId as keyof typeof TeamRole],\n          toTeam: TeamRole[destination.droppableId as keyof typeof TeamRole],\n          startIndex: source.index,\n          endIndex: destination.index,\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Box\n        direction=\"row\"\n        justify=\"around\"\n        pad=\"medium\"\n        gap=\"medium\"\n        flex={{ shrink: 0 }}\n        basis=\"auto\"\n      >\n        <Lineup team={TeamRole.AWAY} />\n        <Lineup team={TeamRole.HOME} />\n      </Box>\n    </DragDropContext>\n  );\n};\n\nexport default Teams;\n","import _ from 'lodash';\n\nimport { RecordedPlay, PlateAppearanceType, ContactType } from 'state/game/types';\nimport { PlayerStats } from 'state/players/types';\n\nexport const initialStats: PlayerStats = {\n  atBats: 0,\n  hits: 0,\n  doubles: 0,\n  triples: 0,\n  homeRuns: 0,\n  walks: 0,\n  stolenBases: 0,\n  caughtStealing: 0,\n  runsBattedIn: 0,\n  runsScored: 0,\n  strikeouts: 0,\n  sacrificeFlies: 0,\n  groundIntoDoublePlays: 0,\n  leftOnBase: 0,\n};\n\nexport const aggregateStats = (plays: RecordedPlay[]) => {\n  const allStats: Record<string, PlayerStats> = {};\n  const updatePlayer = (playerId: string, callback: (stats: PlayerStats) => void) => {\n    if (!(playerId in allStats)) {\n      allStats[playerId] = { ...initialStats };\n    }\n    callback(allStats[playerId]);\n  };\n  plays.forEach(({ gameState, event, runnersScored, runnersBattedIn }) => {\n    runnersScored.forEach(runnerId => {\n      updatePlayer(runnerId, stats => void stats.runsScored++);\n    });\n    if (event.kind === 'stolenBaseAttempt') {\n      updatePlayer(event.runnerId, stats => {\n        if (event.success) {\n          stats.stolenBases++;\n        } else {\n          stats.caughtStealing++;\n        }\n      });\n    } else {\n      updatePlayer(gameState.atBat!, stats => {\n        stats.runsBattedIn += runnersBattedIn.length;\n\n        if (event.type === PlateAppearanceType.WALK) {\n          stats.walks++;\n        } else if (event.type === PlateAppearanceType.SACRIFICE_FLY) {\n          stats.sacrificeFlies++;\n        } else {\n          stats.atBats++;\n          switch (event.type) {\n            case PlateAppearanceType.SINGLE:\n              stats.hits++;\n              break;\n            case PlateAppearanceType.DOUBLE:\n              stats.hits++;\n              stats.doubles++;\n              break;\n            case PlateAppearanceType.TRIPLE:\n              stats.hits++;\n              stats.triples++;\n              break;\n            case PlateAppearanceType.HOMERUN:\n              stats.hits++;\n              stats.homeRuns++;\n              break;\n            case PlateAppearanceType.OUT:\n              if (event.contactType === ContactType.NONE) {\n                stats.strikeouts++;\n              }\n              stats.leftOnBase += _.size(gameState.runners);\n              break;\n            case PlateAppearanceType.DOUBLE_PLAY:\n              if (event.contactType === ContactType.GROUNDER) {\n                stats.groundIntoDoublePlays++;\n              }\n              stats.leftOnBase += _.size(gameState.runners) - 1;\n              break;\n            case PlateAppearanceType.FIELDERS_CHOICE:\n              stats.leftOnBase += _.size(gameState.runners);\n              break;\n          }\n        }\n      });\n    }\n  });\n  return allStats;\n};\n\nexport const getRateStats = (\n  stats: PlayerStats\n): Required<\n  Pick<\n    PlayerStats,\n    | 'battingAverage'\n    | 'onBasePercentage'\n    | 'sluggingPercentage'\n    | 'isolatedPower'\n    | 'onBasePlusSlugging'\n  >\n> => {\n  const battingAverage = stats.hits / stats.atBats;\n  const onBasePercentage =\n    (stats.hits + stats.walks) / (stats.atBats + stats.walks + stats.sacrificeFlies);\n  const sluggingPercentage =\n    (stats.hits + stats.doubles + 2 * stats.triples + 3 * stats.homeRuns) / stats.atBats;\n  return {\n    battingAverage,\n    onBasePercentage,\n    sluggingPercentage,\n    onBasePlusSlugging: onBasePercentage + sluggingPercentage,\n    isolatedPower: sluggingPercentage - battingAverage,\n  };\n};\n\nexport const formatDecimal = (val: number) => {\n  const formatted = val.toFixed(3);\n  return val >= 1 ? formatted : formatted.slice(1);\n};\n","import { createSelector } from '@reduxjs/toolkit';\nimport _ from 'lodash';\n\nimport { getGameHistory, getTeams } from 'state/game/selectors';\nimport { aggregateStats, getRateStats, initialStats, formatDecimal } from './stats';\n\nimport { BoxScoreRow } from './types';\n\nexport const getBoxScore = createSelector(getGameHistory, getTeams, (history, teams) => {\n  const allStats = aggregateStats(history);\n  return teams.map(({ lineup }) =>\n    lineup.map((playerId, index) => {\n      const playerStats = allStats[playerId] ?? initialStats;\n      return {\n        playerId,\n        lineupSpot: index + 1,\n        ...playerStats,\n        ..._.mapValues(getRateStats(playerStats), val =>\n          _.isNaN(val) ? '---' : formatDecimal(val)\n        ),\n      };\n    })\n  ) as [BoxScoreRow[], BoxScoreRow[]];\n});\n","import React, { FC } from 'react';\nimport { Box, Card, DataTable, Text } from 'grommet';\nimport { Redirect } from 'react-router-dom';\n\nimport { isGameInProgress, getPlayerPosition } from 'state/game/selectors';\nimport { getShortPlayerName } from 'state/players/selectors';\nimport { getBoxScore } from 'state/stats/selectors';\nimport { useAppSelector } from 'utils/hooks';\nimport { getPositionAbbreviation } from 'utils/labels';\n\nimport { TeamRole } from 'state/game/types';\nimport { BoxScoreRow } from 'state/stats/types';\n\ninterface NameCellProps {\n  playerId: string;\n  lineupSpot: number;\n}\n\nconst NameCell: FC<NameCellProps> = ({ playerId, lineupSpot }) => {\n  const name = useAppSelector(state => getShortPlayerName(state, playerId));\n  const position = useAppSelector(state => getPlayerPosition(state, playerId));\n\n  return (\n    <Box direction=\"row\" align=\"center\" gap=\"xsmall\">\n      <Text size=\"small\" color=\"dark-3\">\n        {lineupSpot}\n      </Text>\n      <Text weight=\"bold\" style={{ whiteSpace: 'nowrap' }}>\n        {name}\n      </Text>\n      <Text style={{ fontStyle: 'italic' }}>{getPositionAbbreviation(position)}</Text>\n    </Box>\n  );\n};\n\ninterface TeamBoxScoreProps {\n  rows: BoxScoreRow[];\n  team: TeamRole;\n}\n\nconst TeamBoxScore: FC<TeamBoxScoreProps> = ({ rows, team }) => {\n  return (\n    <Card pad=\"small\" background=\"light-1\" margin=\"small\">\n      <DataTable<BoxScoreRow>\n        margin=\"small\"\n        columns={[\n          {\n            property: 'playerId',\n            header: <Text>{team === TeamRole.AWAY ? 'Away' : 'Home'} Batters</Text>,\n            primary: true,\n            render: ({ playerId, lineupSpot }) => (\n              <NameCell playerId={playerId} lineupSpot={lineupSpot} />\n            ),\n          },\n          { property: 'atBats', header: 'AB' },\n          { property: 'runsScored', header: 'R' },\n          { property: 'hits', header: 'H' },\n          { property: 'runsBattedIn', header: 'RBI' },\n          { property: 'walks', header: 'BB' },\n          { property: 'leftOnBase', header: 'LOB' },\n          { property: 'battingAverage', header: 'AVG' },\n          { property: 'onBasePlusSlugging', header: 'OPS' },\n        ]}\n        data={rows}\n      />\n    </Card>\n  );\n};\n\nconst BoxScore = () => {\n  const gameInProgress = useAppSelector(isGameInProgress);\n  const [awayStats, homeStats] = useAppSelector(getBoxScore);\n\n  if (!gameInProgress) {\n    return <Redirect to=\"/teams\" />;\n  }\n\n  return (\n    <Box flex direction=\"row\" wrap justify=\"around\" align=\"center\">\n      <TeamBoxScore rows={awayStats} team={TeamRole.AWAY} />\n      <TeamBoxScore rows={homeStats} team={TeamRole.HOME} />\n    </Box>\n  );\n};\n\nexport default BoxScore;\n","import React, { FC } from 'react';\nimport { Card, CardHeader, Text, CardBody } from 'grommet';\n\nimport Play from './Play';\n\nimport { getOrdinalInning } from 'utils/labels';\n\nimport { HalfInning } from 'state/game/types';\nimport { HalfInningPlaysGroup } from 'state/plays/types';\n\nconst HalfInningPlays: FC<HalfInningPlaysGroup> = ({ inning, halfInning, plays }) => (\n  <Card background=\"light-1\">\n    <CardHeader background=\"light-2\" pad=\"medium\">\n      <Text>\n        {halfInning === HalfInning.TOP ? 'Top' : 'Bottom'} {getOrdinalInning(inning)}\n      </Text>\n    </CardHeader>\n    <CardBody pad={{ horizontal: 'medium', vertical: 'small' }} gap=\"small\" border=\"between\">\n      {plays.map((play, i) => (\n        <Play key={i} {...play} />\n      ))}\n    </CardBody>\n  </Card>\n);\n\nexport default HalfInningPlays;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Text, Box, Heading, ThemeContext } from 'grommet';\nimport _ from 'lodash';\nimport { Redirect } from 'react-router-dom';\n\nimport HalfInningPlays from './HalfInningPlays';\n\nimport { getInning, isGameInProgress } from 'state/game/selectors';\nimport { getAllPlays, getScoringPlays } from 'state/plays/selectors';\nimport { useAppSelector } from 'utils/hooks';\n\nconst Plays = () => {\n  const gameStarted = useAppSelector(isGameInProgress);\n  const scoringPlays = useAppSelector(getScoringPlays);\n  const allPlays = useAppSelector(getAllPlays);\n  const currentInning = useAppSelector(getInning);\n\n  const [selectedInning, setSelectedInning] = useState(currentInning);\n\n  const allPlaysForInning = useMemo(\n    () => allPlays.filter(({ inning }) => inning === selectedInning),\n    [allPlays, selectedInning]\n  );\n\n  const selectInning = useCallback(\n    (inning: number) => () => {\n      setSelectedInning(inning);\n    },\n    [setSelectedInning]\n  );\n\n  if (!gameStarted) {\n    return <Redirect to=\"/teams\" />;\n  }\n\n  return (\n    <Box pad=\"medium\" flex={{ shrink: 0 }} basis=\"auto\" gap=\"small\">\n      <Box direction=\"row\" justify=\"between\">\n        <Heading level={4} margin=\"none\">\n          Scoring\n        </Heading>\n        <Heading level={4} alignSelf=\"end\" margin=\"none\">\n          All Plays\n        </Heading>\n      </Box>\n      <Box direction=\"row\" gap=\"small\">\n        <Box gap=\"small\" basis=\"0\" flex>\n          {scoringPlays.map(group => (\n            <HalfInningPlays key={`${group.inning}_${group.halfInning}`} {...group} />\n          ))}\n        </Box>\n        <Box gap=\"small\" basis=\"0\" flex margin={{ left: 'small' }}>\n          {!allPlaysForInning.length && <Text alignSelf=\"center\">No plays yet this inning.</Text>}\n          {allPlaysForInning.map(group => (\n            <HalfInningPlays key={`${group.inning}_${group.halfInning}`} {...group} />\n          ))}\n        </Box>\n        <ThemeContext.Extend value={{ global: { size: { xxsmall: '32px' } } }}>\n          <Box gap=\"xsmall\" flex={false}>\n            {_.range(1, currentInning + 1).map(inning => (\n              <Box\n                key={inning}\n                round={{ size: '4px' }}\n                border={{ size: 'small' }}\n                width=\"xxsmall\"\n                height=\"xxsmall\"\n                justify=\"center\"\n                align=\"center\"\n                hoverIndicator={!(inning === selectedInning)}\n                background={inning === selectedInning ? 'brand' : undefined}\n                onClick={selectInning(inning)}\n              >\n                <Text>{inning}</Text>\n              </Box>\n            ))}\n          </Box>\n        </ThemeContext.Extend>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Plays;\n","import { ThemeType } from 'grommet';\n\nconst theme: ThemeType = {\n  global: {\n    colors: {\n      brand: '#1c5253',\n      'accent-3': '#C3DFE0',\n      'status-critical-light': '#ffcccc',\n      'status-ok-light': '#ccffed',\n    },\n    focus: {\n      outline: {\n        color: 'transparent',\n      },\n    },\n  },\n  rangeInput: {\n    track: {\n      height: '6px',\n      extend: {\n        borderRadius: '3px',\n      },\n    },\n  },\n  accordion: {\n    border: undefined,\n  },\n};\n\nexport default theme;\n","export const players = [\n  'Sam Myers',\n  'Steven Chan',\n  'Cameron Walls',\n  'Carlos Ortega',\n  'Yukhi Yamashita',\n  'James Lockwood',\n  'Matthew Chinn',\n  'Jason Tong',\n  'Andrew Silva',\n  'Quincy Zhao',\n  'Dale Zelmon',\n  'Wynn Padula',\n  'Leland Bailey',\n  'Michael Cross',\n  'Brendan Wilson',\n  'Dan Keating',\n  'Max Bruk',\n  'Hector Franco',\n  'Mike Basta',\n];\n","import { Box, Button, Heading, Main } from 'grommet';\nimport React, { useCallback } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport {\n  getCurrentGameLength,\n  getGameStatus,\n  getMaxGameLength,\n  getScore,\n} from 'state/game/selectors';\nimport { gameActions } from 'state/game/slice';\nimport { GameStatus } from 'state/game/types';\nimport { useAppDispatch, useAppSelector } from 'utils/hooks';\n\nconst GameOver = () => {\n  const dispatch = useAppDispatch();\n\n  const gameStatus = useAppSelector(getGameStatus);\n  const [awayScore, homeScore] = useAppSelector(getScore);\n  const gameLength = useAppSelector(getCurrentGameLength);\n  const maxGameLength = useAppSelector(getMaxGameLength);\n\n  const onClickExtendGame = useCallback(() => {\n    dispatch(gameActions.extendGame());\n  }, [dispatch]);\n\n  const onClickResetGame = useCallback(() => {\n    dispatch(gameActions.resetGame());\n  }, [dispatch]);\n\n  const onClickFullResetGame = useCallback(() => {\n    dispatch(gameActions.fullResetGame());\n  }, [dispatch]);\n\n  if (gameStatus === GameStatus.IN_PROGRESS) {\n    return <Redirect to=\"/field\" />;\n  }\n  if (gameStatus === GameStatus.NOT_STARTED) {\n    return <Redirect to=\"/teams\" />;\n  }\n\n  return (\n    <Main flex background=\"brand\" justify=\"center\" align=\"center\">\n      <Box align=\"center\">\n        <Heading level={2} margin={{ bottom: 'small' }}>\n          {awayScore > homeScore ? 'Away' : 'Home'} team wins!\n        </Heading>\n        <Heading margin={{ bottom: 'large' }}>\n          {awayScore} - {homeScore}\n        </Heading>\n      </Box>\n      <Box gap=\"small\">\n        {gameLength < maxGameLength && (\n          <Button\n            color=\"light-1\"\n            plain={false}\n            label=\"Play another inning\"\n            onClick={onClickExtendGame}\n          />\n        )}\n        <Button\n          color=\"status-ok\"\n          plain={false}\n          label=\"New Game (same teams)\"\n          onClick={onClickResetGame}\n        />\n        <Button\n          color=\"status-ok\"\n          plain={false}\n          label=\"New Game (reset teams)\"\n          onClick={onClickFullResetGame}\n        />\n      </Box>\n    </Main>\n  );\n};\n\nexport default GameOver;\n","import React, { useEffect } from 'react';\nimport { Grommet, Main, Box } from 'grommet';\nimport { Switch, Route, Redirect, useLocation, useHistory } from 'react-router-dom';\n\nimport TopBar from './TopBar';\nimport Bases from './Bases';\nimport Teams from './Teams';\nimport BoxScore from './BoxScore';\nimport Plays from './plays/Plays';\n\nimport theme from 'theme';\nimport { isGameOver } from 'state/game/selectors';\nimport { addPlayer } from 'state/players/slice';\nimport { players } from 'state/players/testData';\nimport { useMount, useAppDispatch, useAppSelector } from 'utils/hooks';\nimport GameOver from './GameOver';\n\nconst App = () => {\n  const dispatch = useAppDispatch();\n\n  const { pathname } = useLocation();\n  const history = useHistory();\n\n  const gameOver = useAppSelector(isGameOver);\n\n  useMount(() => {\n    players.forEach(player => {\n      const [firstName, lastName] = player.split(' ');\n      dispatch(addPlayer({ firstName, lastName }));\n    });\n  });\n\n  useEffect(() => {\n    if (gameOver && pathname !== '/game-over') {\n      history.replace('/game-over');\n    }\n  }, [pathname, gameOver, history]);\n\n  return (\n    <Grommet full theme={theme}>\n      <Box height=\"100%\">\n        {!gameOver && <TopBar />}\n        <Main flex overflow={{ vertical: 'auto' }}>\n          <Switch>\n            <Route path=\"/game-over\">\n              <GameOver />\n            </Route>\n            <Route path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/field\">\n              <Bases />\n            </Route>\n            <Route path=\"/box-score\">\n              <BoxScore />\n            </Route>\n            <Route path=\"/plays\">\n              <Plays />\n            </Route>\n            <Route path=\"/\">\n              <Redirect to=\"/teams\" />\n            </Route>\n          </Switch>\n        </Main>\n      </Box>\n    </Grommet>\n  );\n};\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistCombineReducers } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport game from './game/slice';\nimport players from './players/slice';\nimport prompts from './prompts/slice';\n\nconst reducer = persistCombineReducers(\n  { key: 'root', storage },\n  {\n    game,\n    players,\n    prompts,\n  }\n);\n\nexport const store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware({ serializableCheck: false, immutableCheck: false }),\n});\nexport const persistor = persistStore(store);\n\nexport type AppState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from 'components/App';\n\nimport { store, persistor } from 'state/store';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <React.StrictMode>\n          <App />\n        </React.StrictMode>\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}